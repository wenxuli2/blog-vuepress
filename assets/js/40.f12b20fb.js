(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{516:function(t,e,n){"use strict";n.r(e);var i=n(20),s=Object(i.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("p",[this._v("interface")]),this._v(" "),e("p",[this._v("undefined，一个特殊值，通常用于指示变量尚未赋值。\nany ,在一些情况下，如果我们无法确定变量的类型时（或者无需确认类型时），我们可以将其指定为 any 类型。尽量避免使用\nvoid, void 类型表示没有任何类型。申明为 void 类型的变量，只能赋予 undefined 和 null\nnever ,never 类型表示永远不会有值的一种类型。\nsymbol ,ES6 引入了一种新的原始数据类型 Symbol ，表示独一无二的值，它是 JavaScript 语言的第七种数据类型。")]),this._v(" "),e("p",[this._v("TSError\n1.Property 'uname' has no initializer and is not definitely assigned in the constructor.\n: it is because TypeScript 2.7 includes a strict class checking where all the properties should be initialized in the constructor.\nSet name property to empty string")])])}),[],!1,null,null,null);e.default=s.exports}}]);