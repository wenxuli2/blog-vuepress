(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{487:function(a,e,t){"use strict";t.r(e);var r=t(20),n=Object(r.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h3",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),t("h3",{attrs:{id:"根据数组字典内某个元素-日期-排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#根据数组字典内某个元素-日期-排序"}},[a._v("#")]),a._v(" 根据数组字典内某个元素(日期)排序")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v('taskList=[{"title":"API接口","date":"2022-03-21 16:48:39","tags":""},{"title":"css简单小问题","date":"2022-5-21 16:46:26","tags":""},{"title":"axios的基本使用","date":"2022-4-21 16:38:20","tags":"axios"}]\nconst date2timestamp =date => new Date(date.substring(0,19).replace(/-/g,\'/\')).getTime();\nconst compare  =  property => (a,b) => date2timestamp(a[property]) -date2timestamp(b[property])\nconsole.log(taskList.sort(compare(\'date\')))\n')])])]),t("h3",{attrs:{id:"js-时间字符串与时间戳之间的转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js-时间字符串与时间戳之间的转换"}},[a._v("#")]),a._v(" JS 时间字符串与时间戳之间的转换")]),a._v(" "),t("h3",{attrs:{id:"参考-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考-2"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.cnblogs.com/cxf1992/p/10723694.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("JS 时间字符串与时间戳之间的转换"),t("OutboundLink")],1)]),a._v(" "),t("h4",{attrs:{id:"字符转时间戳"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符转时间戳"}},[a._v("#")]),a._v(" 字符转时间戳")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("const date = '2015-03-05 17:59:00.0';   \nconst date2timestamp =date => new Date(date.substring(0,19).replace(/-/g,'/')).getTime();\nconsole.log(date2timestamp(date))\n")])])]),t("h3",{attrs:{id:"js-map函数的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js-map函数的使用"}},[a._v("#")]),a._v(" JS--map函数的使用")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("let array = [1, 2, 3, 4, 5];\nlet newArray = array.map((item) => {\n    return item * item;\n})\nconsole.log(newArray)  // [1, 4, 9, 16, 25]\n")])])]),t("h3",{attrs:{id:"下载图片"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下载图片"}},[a._v("#")]),a._v(" 下载图片")]),a._v(" "),t("h3",{attrs:{id:"html-download属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html-download属性"}},[a._v("#")]),a._v(" html-download属性")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v('\x3c!-- 不同源是直接打开而不是下载 --\x3e\n\x3c!-- <a href="https://www.google.com/favicon.ico" download="favicon.ico" id="favicon">Download file</a> --\x3e\n<a href="./images/www.google.com/favicon.ico" download="favicon.ico" id="favicon">Download file</a>\n')])])]),t("h3",{attrs:{id:"检测浏览器是否支持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#检测浏览器是否支持"}},[a._v("#")]),a._v(" 检测浏览器是否支持")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("console.log('download' in document.createElement('a'))\n")])])]),t("h3",{attrs:{id:"自动点击标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动点击标签"}},[a._v("#")]),a._v(" 自动点击标签")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v('<script>\n    //自动点击的方法 clickId 点击事件的id属性值  字符串类型\n    autoClick(clickId="favicon")\n    function autoClick(clickId) {\n        // IE\n        if (document.all) {\n            document.getElementById(clickId).click();\n        }\n        // 其它浏览器\n        else {\n            const e = document.createEvent("MouseEvents");\n            e.initEvent("click", true, true);\n            document.getElementById(clickId).dispatchEvent(e);\n        }\n    }\n<\/script>\n')])])]),t("h3",{attrs:{id:"nodejs下载图片"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nodejs下载图片"}},[a._v("#")]),a._v(" nodejs下载图片")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("const request = require('request');//也是请求网址模块，只不过下载图片的函数比较简单，所以用这个\nconst fs = require('fs');//用于操作文件流\n\nconst img_url = \"https://www.baidu.com/favicon.ico\"\nconst file_name = 'favicon.ico'\ndownload_img(img_url, file_name)\n\n// 异步执行函数，用于下载图片，接收图片地址，和文件命名方式两个参数。\nasync function download_img(img_url, file_name){\nawait request(img_url).pipe(fs.createWriteStream(file_name)).on('close',function(){\n    console.log('pic saved!')\n})\n}\n")])])]),t("h3",{attrs:{id:"arguments-是一个对应于传递给函数的参数的类数组对象。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arguments-是一个对应于传递给函数的参数的类数组对象。"}},[a._v("#")]),a._v(" arguments 是一个对应于传递给函数的参数的类数组对象。")]),a._v(" "),t("h3",{attrs:{id:"set-对象允许你存储任何类型的唯一值-无论是原始值或者是对象引用。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-对象允许你存储任何类型的唯一值-无论是原始值或者是对象引用。"}},[a._v("#")]),a._v(" Set 对象允许你存储任何类型的唯一值，无论是原始值或者是对象引用。")]),a._v(" "),t("h3",{attrs:{id:"javascript-标准内置对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript-标准内置对象"}},[a._v("#")]),a._v(" JavaScript 标准内置对象")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("Function.prototype.apply() \n    方法调用一个具有给定this值的函数，以及以一个数组（或类数组对象）的形式提供的参数。\nFunction.prototype.call() \n    方法使用一个指定的 this 值和单独给出的一个或多个参数来调用一个函数。\nFunction.prototype.call()\n    方法使用一个指定的 this 值和单独给出的一个或多个参数来调用一个函数。\nArray.from() 方法对一个类似数组或可迭代对象创建一个新的，浅拷贝的数组实例。\n")])])]),t("h3",{attrs:{id:"document-queryselector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#document-queryselector"}},[a._v("#")]),a._v(" document.querySelector")]),a._v(" "),t("h2",{attrs:{id:"js剪切板"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js剪切板"}},[a._v("#")]),a._v(" JS剪切板")]),a._v(" "),t("h3",{attrs:{id:"参考-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考-3"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Clipboard",target:"_blank",rel:"noopener noreferrer"}},[a._v("mdn-Clipboard"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("[mdn-Navigator.clipboard](https://developer.mozilla.org/zh-CN/docs/Web/API/Navigator/")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://copyfuture.com/blogs-details/20210805103251367j",target:"_blank",rel:"noopener noreferrer"}},[a._v("剪贴板操作 Clipboard API 教程"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://lanzao.blog.csdn.net/article/details/107841951",target:"_blank",rel:"noopener noreferrer"}},[a._v("JavaScript 技术篇-navigator.permissions读取chrome剪切板权限获取不生效原因：只有在https协议下使用有效。手动设置chrome页面剪切板读取权限方法"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.it610.com/article/1297307954311143424.htm",target:"_blank",rel:"noopener noreferrer"}},[a._v("Js 获取剪贴板值"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Document/execCommand#%E5%91%BD%E4%BB%A4",target:"_blank",rel:"noopener noreferrer"}},[a._v("已废弃document.execCommand"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("window.clipboardData 不行")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/wjiaoling136/article/details/84515559",target:"_blank",rel:"noopener noreferrer"}},[a._v("简单的复制文本到剪切板"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"localstorage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[a._v("#")]),a._v(" localStorage")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("const FormData =\nlocalStorage.setItem('FormData',JSON.stringify(FormData))\nFormData = JSON.parse(localStorage.getItem('FormData'))\nlocalStorage.removeItem()\nlocalStorage.clear()\n\n\n//监视数据变换，save.html 变换storage，自身不响应监听，show 响应监听，必须同源\n[](https://www.csdn.net/tags/MtTaIgzsODU5MDYtYmxvZwO0O0OO0O0O.html)\nwindow.addEventListener(\"getItemEvent\", function (e) {\n    console.log('getItemEvent')\n});\nwindow.addEventListener(\"setItemEvent\", function (e) {\n    console.log('setItemEvent')\n});\nwindow.addEventListener('storage', function (e) {\n    console.log('storage')\n})\n")])])]),t("h3",{attrs:{id:"js正则表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js正则表达式"}},[a._v("#")]),a._v(" JS正则表达式")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v('^ 匹配一个输入或一行的开头，/^a/匹配"an A"，而不匹配"An a"\n$ 匹配一个输入或一行的结尾，/a$/匹配"An a"，而不匹配"an A"\n* 匹配前面元字符0次或多次，/ba*/将匹配b,ba,baa,baaa\n+ 匹配前面元字符1次或多次，/ba*/将匹配ba,baa,baaa\n? 匹配前面元字符0次或1次，/ba*/将匹配b,ba\n(x) 匹配x保存x在名为$1...$9的变量中\nx|y 匹配x或y\n{n} 精确匹配n次\n{n,} 匹配n次以上\n{n,m} 匹配n-m次\n[xyz] 字符集(character set)，匹配这个集合中的任一一个字符(或元字符)\n[^xyz] 不匹配这个集合中的任何一个字符\n[\\b] 匹配一个退格符\n\\b 匹配一个单词的边界\n\\B 匹配一个单词的非边界\n\\cX 这儿，X是一个控制符，/\\cM/匹配Ctrl-M\n\\d 匹配一个字数字符，/\\d/ = /[0-9]/\n\\D 匹配一个非字数字符，/\\D/ = /[^0-9]/\n\\n 匹配一个换行符\n\\r 匹配一个回车符\n\\s 匹配一个空白字符，包括\\n,\\r,\\f,\\t,\\v等\n\\S 匹配一个非空白字符，等于/[^\\n\\f\\r\\t\\v]/\n\\t 匹配一个制表符\n\\v 匹配一个重直制表符\n\\w 匹配一个可以组成单词的字符(alphanumeric，这是我的意译，含数字)，包括下划线，如[\\w]匹配"$5.98"中的5，等于[a-zA-Z0-9]\n\\W 匹配一个不可以组成单词的字符，如[\\W]匹配"$5.98"中的$，等于[^a-zA-Z0-9]。\n')])])]),t("h3",{attrs:{id:"js数组对象去重"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js数组对象去重"}},[a._v("#")]),a._v(" JS数组对象去重")]),a._v(" "),t("h3",{attrs:{id:"参考-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考-4"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/73212786",target:"_blank",rel:"noopener noreferrer"}},[a._v("javascript 数组对象去重的5种方式"),t("OutboundLink")],1),a._v(" "),t("br"),a._v(" "),t("a",{attrs:{href:"https://www.jb51.net/article/154887.htm",target:"_blank",rel:"noopener noreferrer"}},[a._v("js中数组对象去重的两种方法"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"常用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[a._v("#")]),a._v(" 常用方法")]),a._v(" "),t("h4",{attrs:{id:"数组例子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组例子"}},[a._v("#")]),a._v(" 数组例子")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("let arr = [\n    { url: '', 'image_url': '' },\n    { url: 'https://reactjs.org/', 'image_url': 'https://reactjs.org/' },\n    { url: 'https://jquery.com/', 'image_url': 'https://jquery.com/' },\n    { url: 'https://reactjs.org/', 'image_url': 'https://reactjs.org/' },\n    { url: 'https://jquery.com/', 'image_url': 'https://jquery.com/' },\n]\n")])])]),t("h4",{attrs:{id:"利用array-map-和array-find-或者arr-findindex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#利用array-map-和array-find-或者arr-findindex"}},[a._v("#")]),a._v(" 利用array.map()和array.find()或者arr.findIndex")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("// var clearDuplicate1 = (arr, key) => Array.from(new Set(arr.map(e => e[key]))).map(e => arr.find(x => x[key] == e));\nconst clearDuplicate1 = (arr, key) =>Array.from(new Set(arr.map(e => e[key]))).map(e => arr.find(x => x[key] == e))\nconsole.log(clearDuplicate1(arr,'url'))\n\n// var clearDuplicate2 = (arr, key) => Array.from(new Set(arr.map(e => e[key]))).map(e => arr.findIndex(x => x[key] == e)).map(e => arr[e])\nconst clearDuplicate2 = (arr, key) => Array.from(new Set(arr.map(e => e[key]))).map(e => arr.findIndex(x => x[key] == e)).map(e => arr[e])\nconsole.log(clearDuplicate2(arr,'url'))\n")])])]),t("h4",{attrs:{id:"利用arr-reduce-和-array-find-和-array-concat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#利用arr-reduce-和-array-find-和-array-concat"}},[a._v("#")]),a._v(" 利用arr.reduce 和 array.find 和 array.concat")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("const clearDuplicate3 = (arr, key) => arr.reduce((acc, current) => {\n    return acc.find(item => item[key] === current[key]) ? acc : acc.concat([current]) \n}, []);\nconsole.log(clearDuplicate3(arr,'url'))\n利用array.filter和set.has 或者 对象访问属性的方法\nconst clearDuplicate4 = (arr, key) => {\n    const set = new Set()\n    return arr.filter(e => {\n        const duplicate = set.has(e[key])\n        set.add(e[key])\n        return !duplicate\n    })\n}\nconsole.log(clearDuplicate4(arr,'url'))\n\nconst clearDuplicate42 = (arr, key) => {\n    const obj = new Object()\n    return arr.filter(e => {\n        return obj[e[key]] ? false:obj[e[key]] = true\n    })\n}\nconsole.log(clearDuplicate42(arr,'url'))\n利用array.filter 和array.map、indexof\nconst clearDuplicate5 = (arr, key) => arr.filter((ele, index, a) => (a.map(e => e[key]).indexOf(ele[key])) ===index)\nconsole.log(clearDuplicate5(arr,'url'))\n")])])]),t("h4",{attrs:{id:"利用对象访问属性的方法-判断对象中是否存在key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#利用对象访问属性的方法-判断对象中是否存在key"}},[a._v("#")]),a._v(" 利用对象访问属性的方法，判断对象中是否存在key")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("const result = [];\nconst obj = {};\nfor (let i = 0; i < arr.length; i++) {\n    if (!obj[arr[i].url]) {\n        if (arr[i].url){//去空\n            result.push(arr[i]);\n        };\n        obj[arr[i].url] = true;\n    }\n}\nconsole.log(result);\n")])])]),t("h4",{attrs:{id:"利用reduce方法遍历数组-reduce第一个参数是遍历需要执行的函数-第二个参数是item的初始值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#利用reduce方法遍历数组-reduce第一个参数是遍历需要执行的函数-第二个参数是item的初始值"}},[a._v("#")]),a._v(" 利用reduce方法遍历数组,reduce第一个参数是遍历需要执行的函数，第二个参数是item的初始值")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("const obj2 = {};\narr = arr.reduce(function (item, next) {\n    obj2[next.url] ? '' : obj2[next.url] = true && item.push(next);\n    return item;\n}, []);\nconsole.log(arr);\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);