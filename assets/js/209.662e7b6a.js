(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{687:function(e,t,s){"use strict";s.r(t);var n=s(20),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[e._v("#")]),e._v(" 测试")]),e._v(" "),s("p",[e._v("我们的目的是保持 Electron 代码的高覆盖率。 我们要求所有的pull request不仅要通过所有现有的测试，还要增加新的测试来覆盖变更的代码和新的场景。 我们要尽可能多地覆盖Electron应用中的代码路径和用例，以确保我们发布的应用程序都能拥有更少的bug。")]),e._v(" "),s("p",[e._v("这个仓库为 JavaScript 和 C ++ 提供了linting 规则 - 以及单元和集成测试。 通过 "),s("RouterLink",{attrs:{to:"/《Electron中文文档》/development/coding-style.html"}},[e._v("coding-style")]),e._v("文档来学习更多的Electron's编码风格")],1),e._v(" "),s("h2",{attrs:{id:"提示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提示"}},[e._v("#")]),e._v(" 提示")]),e._v(" "),s("p",[e._v("为确保您的JavaScript符合Electron编码风格，请执行"),s("code",[e._v("npm run lint-js")]),e._v("，它将针对Electron本身以及单元测试运行"),s("code",[e._v("standard")]),e._v("测试。 如果您正在使用带有插件/插件系统的编辑器，那么可以使用"),s("a",{attrs:{href:"https://standardjs.com/#are-there-text-editor-plugins",target:"_blank",rel:"noopener noreferrer"}},[e._v("StandardJS addons"),s("OutboundLink")],1),e._v("之类的插件在你提交代码前来检查编码规范。")]),e._v(" "),s("p",[e._v("若要用参数运行"),s("code",[e._v("standard")]),e._v("测试，首先执行"),s("code",[e._v("npm run lint-js --")]),e._v(" 然后输入要传递给"),s("code",[e._v("standard")]),e._v("测试的参数。")]),e._v(" "),s("p",[e._v("要确保您的C ++代码符合Electron编码风格，请执行"),s("code",[e._v("npm run lint-cpp")]),e._v("，它将会执行"),s("code",[e._v("cpplint")]),e._v("脚本。 我们建议您使用"),s("code",[e._v("clang-format")]),e._v("并准备"),s("RouterLink",{attrs:{to:"/《Electron中文文档》/development/clang-format.html"}},[e._v("一个简短的教程")]),e._v("。")],1),e._v(" "),s("p",[e._v("There is not a lot of Python in this repository, but it too is governed by coding style rules. "),s("code",[e._v("npm run lint-py")]),e._v(" will check all Python, using "),s("code",[e._v("pylint")]),e._v(" to do so.")]),e._v(" "),s("h2",{attrs:{id:"单元测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单元测试"}},[e._v("#")]),e._v(" 单元测试")]),e._v(" "),s("p",[e._v("If you are not using "),s("a",{attrs:{href:"https://github.com/electron/build-tools",target:"_blank",rel:"noopener noreferrer"}},[e._v("build-tools"),s("OutboundLink")],1),e._v(", ensure that that name you have configured for your local build of Electron is one of "),s("code",[e._v("Testing")]),e._v(", "),s("code",[e._v("Release")]),e._v(", "),s("code",[e._v("Default")]),e._v(", "),s("code",[e._v("Debug")]),e._v(", or you have set "),s("code",[e._v("process.env.ELECTRON_OUT_DIR")]),e._v(". Without these set, Electron will fail to perform some pre-testing steps.")]),e._v(" "),s("p",[e._v("要运行所有单元测试，请执行 "),s("code",[e._v("npm run test")]),e._v("。 单元测试其实也是一个Electron应用！你可以在"),s("code",[e._v("spec")]),e._v(" 文件夹中找到它。 请注意，单元测试也有自己的 "),s("code",[e._v("package.json")]),e._v("，因此它的依赖没有在最顶层的"),s("code",[e._v("package.json")]),e._v("中定义。")]),e._v(" "),s("p",[e._v("若要通过匹配模式运行单个测试，可以执行 "),s("code",[e._v("npm run test -- -g=PATTERN")]),e._v("，把"),s("code",[e._v("PATTERN")]),e._v(" 替换为匹配某个测试的正则表达式。 例：如果想运行IPC测试，你可以执行"),s("code",[e._v("npm run test -- -g ipc")]),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"在windows10上测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在windows10上测试"}},[e._v("#")]),e._v(" 在Windows10上测试")]),e._v(" "),s("h4",{attrs:{id:"extra-steps-to-run-the-unit-test"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extra-steps-to-run-the-unit-test"}},[e._v("#")]),e._v(" Extra steps to run the unit test:")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("Visual Studio 2019 must be installed.")])]),e._v(" "),s("li",[s("p",[e._v("Node headers have to be compiled for your configuration.")]),e._v(" "),s("div",{staticClass:"language-powershell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[e._v("ninja "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("C out\\Testing third_party\\electron_node:headers\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("The electron.lib has to be copied as node.lib.")]),e._v(" "),s("div",{staticClass:"language-powershell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[e._v("cd out\\Testing\nmkdir gen\\node_headers\\Release\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("copy")]),e._v(" electron"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("lib gen\\node_headers\\Release\\node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("lib\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])])])]),e._v(" "),s("h4",{attrs:{id:"missing-fonts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#missing-fonts"}},[e._v("#")]),e._v(" Missing fonts")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://docs.microsoft.com/en-us/typography/fonts/windows_10_font_list",target:"_blank",rel:"noopener noreferrer"}},[e._v("一些 Windows 10 设备"),s("OutboundLink")],1),e._v("上没有默认安装Meriryo字体，这会导致字体回退测试的失败。 要安装Meiryo字体：")]),e._v(" "),s("ol",[s("li",[e._v("按下Windows key并搜索 "),s("em",[e._v("管理可选功能")]),e._v("。")]),e._v(" "),s("li",[e._v("单击_添加功能_")]),e._v(" "),s("li",[e._v("选择_Japanese Supplemental Fonts_并单击 "),s("em",[e._v("安装")])])]),e._v(" "),s("h4",{attrs:{id:"pixel-measurements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pixel-measurements"}},[e._v("#")]),e._v(" Pixel measurements")]),e._v(" "),s("p",[e._v("由于浮点数精度误差，某些依赖于精确像素测量的测试可能无法正常在Hi-DPI屏幕的设备上工作。 为了使这些测试能正常运行，请确保设备的缩放比为100%。")]),e._v(" "),s("p",[e._v("要配置缩放比：")]),e._v(" "),s("ol",[s("li",[e._v("按下Windows key并搜索_显示设置_.")]),e._v(" "),s("li",[e._v("在_Scale and layout_下，确保缩放比为100%。")])])])}),[],!1,null,null,null);t.default=r.exports}}]);