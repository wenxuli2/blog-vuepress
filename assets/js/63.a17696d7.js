(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{544:function(t,e,s){"use strict";s.r(e);var a=s(20),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"类-clientrequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类-clientrequest"}},[t._v("#")]),t._v(" 类: ClientRequest")]),t._v(" "),s("blockquote",[s("p",[t._v("发起HTTP/HTTPS请求.")])]),t._v(" "),s("p",[t._v("Process: "),s("RouterLink",{attrs:{to:"/《Electron中文文档》/glossary.html#main-process"}},[t._v("Main")]),s("br"),t._v(" "),s("em",[t._v("This class is not exported from the "),s("code",[t._v("'electron'")]),t._v(" module. It is only available as a return value of other methods in the Electron API.")])],1),t._v(" "),s("p",[s("code",[t._v("ClientRequest")]),t._v("实现了"),s("a",{attrs:{href:"https://nodejs.org/api/stream.html#stream_writable_streams",target:"_blank",rel:"noopener noreferrer"}},[t._v("Writable Stream"),s("OutboundLink")],1),t._v("接口, 因此是一个"),s("a",{attrs:{href:"https://nodejs.org/api/events.html#events_class_eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t._v("EventEmitter"),s("OutboundLink")],1),t._v("类型.")]),t._v(" "),s("h3",{attrs:{id:"new-clientrequest-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new-clientrequest-options"}},[t._v("#")]),t._v(" "),s("code",[t._v("new ClientRequest(options)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("options")]),t._v(" (Object | String) - 如果 "),s("code",[t._v("options")]),t._v(" 是字符串，则将其解释为请求 URL。 如果是对象，它应该通过以下属性完全指定HTTP请求：\n"),s("ul",[s("li",[s("code",[t._v("method")]),t._v(" String (可选) - HTTP 请求方法。 默认为GET方法。")]),t._v(" "),s("li",[s("code",[t._v("url")]),t._v(" String (可选) - 请求URL。 必须以绝对路径形式提供，并将协议指定为http或https。")]),t._v(" "),s("li",[s("code",[t._v("session")]),t._v(" Object (可选) - 与请求相关联的"),s("RouterLink",{attrs:{to:"/《Electron中文文档》/api/session.html"}},[s("code",[t._v("Session")])]),t._v("实例.")],1),t._v(" "),s("li",[s("code",[t._v("partition")]),t._v(" String (可选) - 与请求相关联的"),s("RouterLink",{attrs:{to:"/《Electron中文文档》/api/session.html"}},[s("code",[t._v("partition")])]),t._v("名称. 默认为空字符串. "),s("code",[t._v("session")]),t._v(" 选项取代了 "),s("code",[t._v("partition")]),t._v("。 因此, 如果"),s("code",[t._v("session")]),t._v("是显式指定的, 则"),s("code",[t._v("partition")]),t._v("将被忽略.")],1),t._v(" "),s("li",[s("code",[t._v("credentials")]),t._v(" String (可选) - 可以是 "),s("code",[t._v("include")]),t._v(" 或 "),s("code",[t._v("omit")]),t._v("。 是否随此请求发送 "),s("a",{attrs:{href:"https://fetch.spec.whatwg.org/#credentials",target:"_blank",rel:"noopener noreferrer"}},[t._v("凭据"),s("OutboundLink")],1),t._v("。 如果设置为 "),s("code",[t._v("include")]),t._v("，将使用与请求相关的会话凭据。 如果设置为 "),s("code",[t._v("omit")]),t._v("，则不会随请求发送凭据(并且不会在 401响应的事件中触发 "),s("code",[t._v("'login'")]),t._v(" 事件)。 这与同名的 "),s("a",{attrs:{href:"https://fetch.spec.whatwg.org/#concept-request-credentials-mode",target:"_blank",rel:"noopener noreferrer"}},[t._v("fetch"),s("OutboundLink")],1),t._v(" 选项的行为相同。 如果未指定此选项，则会发送来自会话的身份验证数据，同时不发送cookie(除非 设置了"),s("code",[t._v("useSessionCookies")]),t._v(")。")]),t._v(" "),s("li",[s("code",[t._v("useSessionCookies")]),t._v(" Boolean (可选) - 是否从提供的会话与请求一起发送cookie。 如果指定了 "),s("code",[t._v("credentials")]),t._v(" ，则此选项没有效果。 默认值为 "),s("code",[t._v("false")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("protocol")]),t._v(" String (可选) - 可以是 "),s("code",[t._v("http:")]),t._v(" 或 "),s("code",[t._v("https:")]),t._v("。 协议方案的形式为“scheme:”。 默认为 'http:'。")]),t._v(" "),s("li",[s("code",[t._v("host")]),t._v(" String (可选) - 作为连接提供的服务器主机,主机名和端口号'hostname:port'.")]),t._v(" "),s("li",[s("code",[t._v("hostname")]),t._v(" String (可选) - 服务器主机名.")]),t._v(" "),s("li",[s("code",[t._v("port")]),t._v(" Integer (可选) - 服务器侦听的端口号.")]),t._v(" "),s("li",[s("code",[t._v("path")]),t._v(" String (可选) - 请求URL的路径部分.")]),t._v(" "),s("li",[s("code",[t._v("redirect")]),t._v(" String (可选) - 可以是 "),s("code",[t._v("follow")]),t._v("， "),s("code",[t._v("error")]),t._v(" 或 "),s("code",[t._v("manual")]),t._v("。 当前请求的重定向模式。 当模式为 "),s("code",[t._v("error")]),t._v(" 时，任何重定向都会被中止。 当模式为 "),s("code",[t._v("manual")]),t._v(" 时，重定向会被取消，除非 "),s("a",{attrs:{href:"#requestfollowredirect"}},[s("code",[t._v("request.followRedirect")])]),t._v(" 在"),s("a",{attrs:{href:"#event-redirect"}},[s("code",[t._v("redirect")])]),t._v(" 事件期间同步调用。  默认值为 "),s("code",[t._v("follow")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("origin")]),t._v(" String (可选) - 请求的源 URL。")])])])]),t._v(" "),s("p",[s("code",[t._v("options")]),t._v(" 属性，如 "),s("code",[t._v("protocol")]),t._v(", "),s("code",[t._v("host")]),t._v(", "),s("code",[t._v("hostname")]),t._v(", "),s("code",[t._v("port")]),t._v(" 和 "),s("code",[t._v("path")]),t._v("，在 "),s("a",{attrs:{href:"https://nodejs.org/api/url.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("URL"),s("OutboundLink")],1),t._v(" 模块中会严格遵循 Node.js 的模式")]),t._v(" "),s("p",[t._v("例如,我们可以创建与github.com相同的请求如下:")]),t._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" request "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" net"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https:'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("hostname")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'github.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h3",{attrs:{id:"实例事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例事件"}},[t._v("#")]),t._v(" 实例事件")]),t._v(" "),s("h4",{attrs:{id:"事件-response"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件-response"}},[t._v("#")]),t._v(" 事件: 'response'")]),t._v(" "),s("p",[t._v("返回:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("response")]),t._v(" "),s("RouterLink",{attrs:{to:"/《Electron中文文档》/api/incoming-message.html"}},[t._v("收到的消息")]),t._v(" - 表示HTTP响应消息的对象。")],1)]),t._v(" "),s("h4",{attrs:{id:"事件-login"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件-login"}},[t._v("#")]),t._v(' 事件: "login"')]),t._v(" "),s("p",[t._v("返回:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("authInfo")]),t._v(" Object\n"),s("ul",[s("li",[s("code",[t._v("isProxy")]),t._v(" Boolean")]),t._v(" "),s("li",[s("code",[t._v("scheme")]),t._v(" String")]),t._v(" "),s("li",[s("code",[t._v("host")]),t._v(" String")]),t._v(" "),s("li",[s("code",[t._v("port")]),t._v(" Integer")]),t._v(" "),s("li",[s("code",[t._v("realm")]),t._v(" String")])])]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" Function\n"),s("ul",[s("li",[s("code",[t._v("username")]),t._v(" String (可选)")]),t._v(" "),s("li",[s("code",[t._v("password")]),t._v(" String (可选)")])])])]),t._v(" "),s("p",[t._v("当身份验证代理请求用户认证时触发")]),t._v(" "),s("p",[t._v("用户证书会调用 "),s("code",[t._v("callback")]),t._v("方法:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("username")]),t._v(" String")]),t._v(" "),s("li",[s("code",[t._v("password")]),t._v(" String")])]),t._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'login'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("authInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'password'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("提供空的凭证将取消请求，并在响应对象上报告一个身份验证错误:")]),t._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'response'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("response")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("STATUS: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("ERROR: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nrequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'login'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("authInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h4",{attrs:{id:"事件-finish"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件-finish"}},[t._v("#")]),t._v(" 事件：'finish'")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("request")]),t._v(" 最终的 chunk 数据后写入 "),s("code",[t._v("request")]),t._v(" 后触发")]),t._v(" "),s("h4",{attrs:{id:"事件-abort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件-abort"}},[t._v("#")]),t._v(" 事件: 'abort'")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("request")]),t._v(" 被中止时触发。 如果 "),s("code",[t._v("request")]),t._v(" 已经关闭， "),s("code",[t._v("abort")]),t._v(" 事件将不会被触发。")]),t._v(" "),s("h4",{attrs:{id:"event-error"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-error"}},[t._v("#")]),t._v(" Event: 'error'")]),t._v(" "),s("p",[t._v("返回:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("error")]),t._v(" Error -提供失败信息的错误对象。")])]),t._v(" "),s("p",[t._v("当 "),s("code",[t._v("net")]),t._v("网络模块没有发出网络请求时会触发。 通常情况下，当 "),s("code",[t._v("request")]),t._v("请求对象发出一个 "),s("code",[t._v("error")]),t._v("错误事件时，一个 "),s("code",[t._v("close")]),t._v("关闭事件会随之发生，并且不会提供响应对象。")]),t._v(" "),s("h4",{attrs:{id:"事件-close"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件-close"}},[t._v("#")]),t._v(" 事件： 'close'")]),t._v(" "),s("p",[t._v("作为HTTP 的 request-response 中的最后一个事件发出。 "),s("code",[t._v("close")]),t._v("事件表明，在"),s("code",[t._v("request")]),t._v("或"),s("code",[t._v("response")]),t._v(" 对象中不会发出更多的事件。")]),t._v(" "),s("h4",{attrs:{id:"事件-redirect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件-redirect"}},[t._v("#")]),t._v(" 事件: 'redirect'")]),t._v(" "),s("p",[t._v("返回:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("statusCode")]),t._v(" Integer")]),t._v(" "),s("li",[s("code",[t._v("method")]),t._v(" String")]),t._v(" "),s("li",[s("code",[t._v("redirectUrl")]),t._v(" String")]),t._v(" "),s("li",[s("code",[t._v("responseHeaders")]),t._v(" Record<String, String[]>")])]),t._v(" "),s("p",[t._v("当服务器返回重定向响应时触发(例如，301 页面永久性移走)。 调用 "),s("a",{attrs:{href:"#requestfollowredirect"}},[s("code",[t._v("request.followRirect")])]),t._v(" 将继续重定向。  如果该事件被处理，"),s("a",{attrs:{href:"#requestfollowredirect"}},[s("code",[t._v("request.followRedirect")])]),t._v(" 必须"),s("strong",[t._v("同步")]),t._v("调用，否则请求将被取消。")]),t._v(" "),s("h3",{attrs:{id:"实例属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例属性"}},[t._v("#")]),t._v(" 实例属性")]),t._v(" "),s("h4",{attrs:{id:"request-chunkedencoding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-chunkedencoding"}},[t._v("#")]),t._v(" "),s("code",[t._v("request.chunkedEncoding")])]),t._v(" "),s("p",[t._v("一个"),s("code",[t._v("Boolean")]),t._v("类型的值，指定请求是否将使用 HTTP 分块传输编码。 默认值为 false. 该属性是可读写的, 但它只能在第一次写入操作之前设置，因为还没有写入 HTTP 头。 在第一写入后如果设置"),s("code",[t._v("chunkedEncoding")]),t._v("属性将引发错误。")]),t._v(" "),s("p",[t._v("如果 request 的 body 是一个大的数据时，强烈建议使用块编码。因为数据将以小块的方式进行传输, 而不是在 Electron 进程内存中内部缓冲。")]),t._v(" "),s("h3",{attrs:{id:"实例方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[t._v("#")]),t._v(" 实例方法")]),t._v(" "),s("h4",{attrs:{id:"request-setheader-name-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-setheader-name-value"}},[t._v("#")]),t._v(" "),s("code",[t._v("request.setHeader(name, value)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("name")]),t._v(" String - 额外的 HTTP 头名称.")]),t._v(" "),s("li",[s("code",[t._v("value")]),t._v(" String - 额外的 HTTP 头部值。")])]),t._v(" "),s("p",[t._v("添加一个额外的 HTTP 头。 头名称将按原样发布，不会转为小写。 它只能在第一次写入之前调用。 在第一次写入后调用此方法将引发错误。 如果传递的值不是 "),s("code",[t._v("String")]),t._v(", 则会调用 "),s("code",[t._v("toString ()")]),t._v(" 方法来获取最终值。")]),t._v(" "),s("p",[t._v("某些头部受应用程序设置的限制。 这些头部如下所列。 有关受限头部的更多信息，可以在 "),s("a",{attrs:{href:"https://source.chromium.org/chromium/chromium/src/+/master:services/network/public/cpp/header_util.cc;drc=1562cab3f1eda927938f8f4a5a91991fefde66d3;bpv=1;bpt=1;l=22",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chromium的头部工具"),s("OutboundLink")],1),t._v(" 中找到。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Content-Length")])]),t._v(" "),s("li",[s("code",[t._v("Host")])]),t._v(" "),s("li",[s("code",[t._v("Trailer")]),t._v(" 或 "),s("code",[t._v("Te")])]),t._v(" "),s("li",[s("code",[t._v("Upgrade")])]),t._v(" "),s("li",[s("code",[t._v("Cookie2")])]),t._v(" "),s("li",[s("code",[t._v("Keep-Alive")])]),t._v(" "),s("li",[s("code",[t._v("Transfer-Encoding")])])]),t._v(" "),s("p",[t._v("此外，也不允许将 "),s("code",[t._v("Connection")]),t._v(" 头部设置为 "),s("code",[t._v("upgrade")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"request-getheader-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-getheader-name"}},[t._v("#")]),t._v(" "),s("code",[t._v("request.getHeader(name)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("name")]),t._v(" String - 指定一个额外的头名称.")])]),t._v(" "),s("p",[t._v("返回 "),s("code",[t._v("String")]),t._v(" - 以前设置的额外头部名称的值。")]),t._v(" "),s("h4",{attrs:{id:"request-removeheader-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-removeheader-name"}},[t._v("#")]),t._v(" "),s("code",[t._v("request.removeHeader(name)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("name")]),t._v(" String - 指定一个额外的头名称.")])]),t._v(" "),s("p",[t._v("移除先前设置的额外头部名称。 此方法只能在首次写入前调用。 尝试在第一次写入后调用将抛出一个错误。")]),t._v(" "),s("h4",{attrs:{id:"request-write-chunk-encoding-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-write-chunk-encoding-callback"}},[t._v("#")]),t._v(" "),s("code",[t._v("request.write(chunk[, encoding][, callback])")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("chunk")]),t._v(" (String | Buffer) - 请求主体的数据块。 如果是字符串，则使用指定的编码将其转换为Buffer。")]),t._v(" "),s("li",[s("code",[t._v("encoding")]),t._v(" String (可选) - 用于将字符串块转换为Buffer对象。 默认为“utf-8”。")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" Function (可选)-在写操作结束后调用。")])]),t._v(" "),s("p",[s("code",[t._v("callback")]),t._v(" 实质上是为了保持与 Node.js API 的相似性而引入的虚拟函数。 在将 "),s("code",[t._v("chunk")]),t._v(" 内容传递到 Chromium 网络层之后, 在下一个 tick 中异步调用。 与 Node.js 实现相反, 不保证 "),s("code",[t._v("chunk")]),t._v(" 内容在调用 "),s("code",[t._v("callback")]),t._v(" 之前已经被刷新。")]),t._v(" "),s("p",[t._v("向请求正文中添加一个数据块。 第一次写操作可能导致在线路上发出请求头。 在第一次写入操作后, 不允许添加或删除自定义标头。")]),t._v(" "),s("h4",{attrs:{id:"request-end-chunk-encoding-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-end-chunk-encoding-callback"}},[t._v("#")]),t._v(" "),s("code",[t._v("request.end([chunk][, encoding][, callback])")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("chunk")]),t._v(" (String | Buffer) (可选)")]),t._v(" "),s("li",[s("code",[t._v("encoding")]),t._v(" String (可选)")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" Function (可选)")])]),t._v(" "),s("p",[t._v("发送请求数据的剩下部分。 不允许进行后续的写入或结束操作。 "),s("code",[t._v("finish")]),t._v(" 事件在结束操作后发出。")]),t._v(" "),s("h4",{attrs:{id:"request-abort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-abort"}},[t._v("#")]),t._v(" "),s("code",[t._v("request.abort()")])]),t._v(" "),s("p",[t._v("取消正在进行的 HTTP 事务。 如果请求已发出 "),s("code",[t._v("close")]),t._v(" 事件, 则中止操作将不起作用。 否则正在进行的事件将发出 "),s("code",[t._v("abort")]),t._v(" 和 "),s("code",[t._v("close")]),t._v(" 事件。 此外, 如果有一个正在进行的响应对象, 它将发出 "),s("code",[t._v("aborted")]),t._v(" 事件。")]),t._v(" "),s("h4",{attrs:{id:"request-followredirect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-followredirect"}},[t._v("#")]),t._v(" "),s("code",[t._v("request.followRedirect()")])]),t._v(" "),s("p",[t._v("继续任何待处理的重定向。 只能在 "),s("code",[t._v("'redirect'")]),t._v(" 事件期间调用。")]),t._v(" "),s("h4",{attrs:{id:"request-getuploadprogress"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-getuploadprogress"}},[t._v("#")]),t._v(" "),s("code",[t._v("request.getUploadProgress()")])]),t._v(" "),s("p",[t._v("返回 "),s("code",[t._v("Object")]),t._v(":")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("active")]),t._v(" Boolean - 请求当前是否处于活动状态。 如果为 false，将不会设置其他属性。")]),t._v(" "),s("li",[s("code",[t._v("started")]),t._v(" Boolean - 上传是否已经开始。 如果值为false，"),s("code",[t._v("current")]),t._v(" 和 "),s("code",[t._v("total")]),t._v(" 将被设置为 0。")]),t._v(" "),s("li",[s("code",[t._v("current")]),t._v(" Integer - 到目前为止已上传的字节数")]),t._v(" "),s("li",[s("code",[t._v("total")]),t._v(" Integer - 本次请求总共要上传的字节数")])]),t._v(" "),s("p",[t._v("您可以使用此方法获取使用 "),s("code",[t._v("POST")]),t._v(" 请求的文件上传或其他数据传输的进度")])])}),[],!1,null,null,null);e.default=r.exports}}]);