(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{522:function(s,n,e){"use strict";e.r(n);var a=e(20),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h3",{attrs:{id:"初始化webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化webpack"}},[s._v("#")]),s._v(" 初始化webpack")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v('mkdir webpack-demo\ncd webpack-demo\nnpm init -y\nnpm i webpack webpack-cli -D\n\n新建目录及文件 \n        mkdir src,dist,"src/css","src/styles","src/js","src/images"\n        new-item READMD.md,webpack.config.js,"./src/index.html","./src/main.js","./src/styles/index.stylus"\n\n在package.json配置\n    "scripts": {\n        "dev": "webpack --config webpack.config.js --mode development",\n        "build": "webpack --config webpack.config.js --mode production"\n     },\n\nwebpack.config配置\n    module.exports = {\n        entry:\'./src/main.js\',\n        output:{\n            filename:\'main.js\',\n            path: path.resolve(__dirname,"dist")\n        }\n\n    }\n导入loader\n    导入css\n        npm i style-loader css-loader -D\n    导入sass\n       npm i sass sass-loader\n    导入less\n      npm install less less-loader --save-dev\n      npm install --save-dev postcss-loader postcss\n    导入stylus\n      npm i stylus stylus-loader -D\n      npm install --save-dev style-loader\n\n导入plugin\n    npm i html-webpack-plugin clean-webpack-plugin mini-css-extract-plugin -D\n打包编译\n    npm run build\n')])])]),e("h3",{attrs:{id:"bootstarp按需加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bootstarp按需加载"}},[s._v("#")]),s._v(" Bootstarp按需加载")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("npm i jquery bootstrap popper.js -save\nnew-item src/styles/index.scss\nnew-item src/styles/main.scss\n配置main.scss\n    @import 'bootstrap/scss/_functions';\n    @import 'bootstrap/scss/_variables';\n    @import 'bootstrap/scss/_mixins';\n    //其它的就可以按需引入了\n")])])]),e("h3",{attrs:{id:"初始化babel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化babel"}},[s._v("#")]),s._v(" 初始化babel")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v('npm i babel-cli -g\nmkdir my-babel\ncd my-babel\nnpm init -y\nnpm i babel-cli babel-preset-es2015 -D\nnew-item .babelrc\n.babelrc配置\n    {\n    "presets":["es2015"],\n    "plugins":[]\n    }\n    {\n')])])]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("babel src --out-dir dist\n    \x3c!-- 参数 --\x3e\n    --watch")])])])])}),[],!1,null,null,null);n.default=t.exports}}]);