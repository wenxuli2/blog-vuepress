(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{542:function(t,s,a){"use strict";a.r(s);var n=a(20),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"contenttracing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contenttracing"}},[t._v("#")]),t._v(" contentTracing")]),t._v(" "),a("blockquote",[a("p",[t._v("从Chromium收集追踪数据以找到性能瓶颈和慢操作。")])]),t._v(" "),a("p",[t._v("进程："),a("RouterLink",{attrs:{to:"/《Electron中文文档》/glossary.html#main-process"}},[t._v("主进程")])],1),t._v(" "),a("p",[t._v("此模块不包括 Web 界面。 若要查看记录的轨迹，请使用"),a("a",{attrs:{href:"https://chromium.googlesource.com/catapult/+/HEAD/tracing/README.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("跟踪查看器"),a("OutboundLink")],1),t._v("，在Chrome上可以访问 "),a("code",[t._v("chrome://tracking")]),t._v(" 。")]),t._v(" "),a("p",[t._v("**注意：**在应用程序模块的 "),a("code",[t._v("ready")]),t._v(" 事件触发之前，您不应该使用此模块。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" contentTracing "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'electron'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("whenReady")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" contentTracing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("startRecording")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("included_categories")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tracing started'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" contentTracing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopRecording")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tracing data recorded to '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h2",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("p",[a("code",[t._v("contentTracing")]),t._v("模块包含以下方法：")]),t._v(" "),a("h3",{attrs:{id:"contenttracing-getcategories"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contenttracing-getcategories"}},[t._v("#")]),t._v(" "),a("code",[t._v("contentTracing.getCategories()")])]),t._v(" "),a("p",[t._v("返回 "),a("code",[t._v("Promise<String[]>")]),t._v(" - 一旦所有子进程都确认了 "),a("code",[t._v("getCategories")]),t._v(" 请求，会 resolve 一个类别组的数组")]),t._v(" "),a("p",[t._v("获取一组类别组。 当到达新的代码路径时，类别组可能会更改。 另请参阅"),a("a",{attrs:{href:"https://chromium.googlesource.com/chromium/src/+/master/base/trace_event/builtin_categories.h",target:"_blank",rel:"noopener noreferrer"}},[t._v("内置跟踪类别列表"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("注意：")]),t._v(" Electron 添加了一个名为 "),a("code",[t._v('"electron"')]),t._v(" 的非默认追踪类别。 此类别可以用于捕捉Electron特定的追踪事件。")])]),t._v(" "),a("h3",{attrs:{id:"contenttracing-startrecording-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contenttracing-startrecording-options"}},[t._v("#")]),t._v(" "),a("code",[t._v("contentTracing.startRecording(options)")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("options")]),t._v(" ("),a("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/trace-config.html"}},[t._v("TraceConfig")]),t._v(" | "),a("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/trace-categories-and-options.html"}},[t._v("TraceCategoriesAndOptions")]),t._v(")")],1)]),t._v(" "),a("p",[t._v("返回 "),a("code",[t._v("Promise<void>")]),t._v(" - 当所有子进程都确认了 "),a("code",[t._v("startRecording")]),t._v(" 请求后 resolve.")]),t._v(" "),a("p",[t._v("在所有进程上开始记录")]),t._v(" "),a("p",[t._v("一旦收到EnableRecording请求，记录立即在本地开始进行，并在子进程上异步执行。")]),t._v(" "),a("p",[t._v("如果一个记录已经运行了，promise将立即resolve，因为一次只能进行一个跟踪操作。")]),t._v(" "),a("h3",{attrs:{id:"contenttracing-stoprecording-resultfilepath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contenttracing-stoprecording-resultfilepath"}},[t._v("#")]),t._v(" "),a("code",[t._v("contentTracing.stopRecording([resultFilePath])")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("resultFilePath")]),t._v(" String (可选)")])]),t._v(" "),a("p",[t._v("返回 "),a("code",[t._v("Promise<String>")]),t._v(" - 一旦所有子进程都确认了 "),a("code",[t._v("stopRecording")]),t._v(" 请求，会 resolve 一个包含了追踪数据的文件路径")]),t._v(" "),a("p",[t._v("停止所有进程记录。")]),t._v(" "),a("p",[t._v("子进程通常缓存跟踪数据，并且很少清空和发送跟踪数据回到主进程。 这有助于最小化运行时间开销，因为通过IPC发送跟踪数据可能是一个开销巨大的操作。 因此，为了结束跟踪，Chromium异步地要求所有子进程刷新所有挂起的跟踪数据。")]),t._v(" "),a("p",[t._v("追踪数据将被写入 "),a("code",[t._v("resultFilePath")]),t._v("。 如果 "),a("code",[t._v("resultFilePath")]),t._v(" 是空的或未提供，追踪数据将被写入临时文件，并且路径将在promise中返回。")]),t._v(" "),a("h3",{attrs:{id:"contenttracing-gettracebufferusage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contenttracing-gettracebufferusage"}},[t._v("#")]),t._v(" "),a("code",[t._v("contentTracing.getTraceBufferUsage()")])]),t._v(" "),a("p",[t._v("返回 "),a("code",[t._v("Promise<Object>")]),t._v(" - resolve一个包含了追踪缓冲器的 "),a("code",[t._v("value")]),t._v(" 和 "),a("code",[t._v("percentage")]),t._v(" 最大使用量的对象")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("value")]),t._v(" Number")]),t._v(" "),a("li",[a("code",[t._v("percentage")]),t._v(" Number")])]),t._v(" "),a("p",[t._v("获取追踪缓冲区在进程间的最大使用量（占全部状态的百分比）。")])])}),[],!1,null,null,null);s.default=e.exports}}]);