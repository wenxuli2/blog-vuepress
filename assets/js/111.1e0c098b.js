(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{588:function(e,t,o){"use strict";o.r(t);var i=o(20),n=Object(i.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"desktopcapturersource-object"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#desktopcapturersource-object"}},[e._v("#")]),e._v(" DesktopCapturerSource Object")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("id")]),e._v(" String - The identifier of a window or screen that can be used as a "),o("code",[e._v("chromeMediaSourceId")]),e._v(" constraint when calling ["),o("code",[e._v("navigator.webkitGetUserMedia")]),e._v("]. The format of the identifier will be "),o("code",[e._v("window:XX:YY")]),e._v(" or "),o("code",[e._v("screen:ZZ:0")]),e._v(". XX is the windowID/handle. YY is 1 for the current process, and 0 for all others. ZZ is a sequential number that represents the screen, and it does not equal to the index in the source's name.")]),e._v(" "),o("li",[o("code",[e._v("name")]),e._v(" String - A screen source will be named either "),o("code",[e._v("Entire Screen")]),e._v(" or "),o("code",[e._v("Screen <index>")]),e._v(", while the name of a window source will match the window title.")]),e._v(" "),o("li",[o("code",[e._v("thumbnail")]),e._v(" "),o("RouterLink",{attrs:{to:"/《Electron中文文档》/api/native-image.html"}},[e._v("NativeImage")]),e._v(" - A thumbnail image. "),o("strong",[e._v("Note:")]),e._v(" There is no guarantee that the size of the thumbnail is the same as the "),o("code",[e._v("thumbnailSize")]),e._v(" specified in the "),o("code",[e._v("options")]),e._v(" passed to "),o("code",[e._v("desktopCapturer.getSources")]),e._v(". The actual size depends on the scale of the screen or window.")],1),e._v(" "),o("li",[o("code",[e._v("display_id")]),e._v(" String - A unique identifier that will correspond to the "),o("code",[e._v("id")]),e._v(" of the matching "),o("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/display.html"}},[e._v("Display")]),e._v(" returned by the "),o("RouterLink",{attrs:{to:"/《Electron中文文档》/api/screen.html"}},[e._v("Screen API")]),e._v(". On some platforms, this is equivalent to the "),o("code",[e._v("XX")]),e._v(" portion of the "),o("code",[e._v("id")]),e._v(" field above and on others it will differ. It will be an empty string if not available.")],1),e._v(" "),o("li",[o("code",[e._v("appIcon")]),e._v(" "),o("RouterLink",{attrs:{to:"/《Electron中文文档》/api/native-image.html"}},[e._v("NativeImage")]),e._v(" - An icon image of the application that owns the window or null if the source has a type screen. The size of the icon is not known in advance and depends on what the application provides.")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);