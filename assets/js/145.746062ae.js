(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{622:function(e,o,s){"use strict";s.r(o);var t=s(20),r=Object(t.a)({},(function(){var e=this,o=e.$createElement,s=e._self._c||o;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"protocolresponse-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#protocolresponse-object"}},[e._v("#")]),e._v(" ProtocolResponse Object")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("error")]),e._v(" Integer (optional) - When assigned, the "),s("code",[e._v("request")]),e._v(" will fail with the "),s("code",[e._v("error")]),e._v(" number . For the available error numbers you can use, please see the "),s("a",{attrs:{href:"https://source.chromium.org/chromium/chromium/src/+/master:net/base/net_error_list.h",target:"_blank",rel:"noopener noreferrer"}},[e._v("net error list"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("statusCode")]),e._v(" Number (optional) - The HTTP response code, default is 200.")]),e._v(" "),s("li",[s("code",[e._v("charset")]),e._v(" String (optional) - The charset of response body, default is "),s("code",[e._v('"utf-8"')]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("mimeType")]),e._v(" String (optional) - The MIME type of response body, default is "),s("code",[e._v('"text/html"')]),e._v(". Setting "),s("code",[e._v("mimeType")]),e._v(" would implicitly set the "),s("code",[e._v("content-type")]),e._v(" header in response, but if "),s("code",[e._v("content-type")]),e._v(" is already set in "),s("code",[e._v("headers")]),e._v(", the "),s("code",[e._v("mimeType")]),e._v(" would be ignored.")]),e._v(" "),s("li",[s("code",[e._v("headers")]),e._v(" Record<string, string | string[]> (optional) - An object containing the response headers. The keys must be String, and values must be either String or Array of String.")]),e._v(" "),s("li",[s("code",[e._v("data")]),e._v(" (Buffer | String | ReadableStream) (optional) - The response body. When returning stream as response, this is a Node.js readable stream representing the response body. When returning "),s("code",[e._v("Buffer")]),e._v(" as response, this is a "),s("code",[e._v("Buffer")]),e._v(". When returning "),s("code",[e._v("String")]),e._v(" as response, this is a "),s("code",[e._v("String")]),e._v(". This is ignored for other types of responses.")]),e._v(" "),s("li",[s("code",[e._v("path")]),e._v(" String (optional) - Path to the file which would be sent as response body. This is only used for file responses.")]),e._v(" "),s("li",[s("code",[e._v("url")]),e._v(" String (optional) - Download the "),s("code",[e._v("url")]),e._v(" and pipe the result as response body. This is only used for URL responses.")]),e._v(" "),s("li",[s("code",[e._v("referrer")]),e._v(" String (optional) - The "),s("code",[e._v("referrer")]),e._v(" URL. This is only used for file and URL responses.")]),e._v(" "),s("li",[s("code",[e._v("method")]),e._v(" String (optional) - The HTTP "),s("code",[e._v("method")]),e._v(". This is only used for file and URL responses.")]),e._v(" "),s("li",[s("code",[e._v("session")]),e._v(" Session (optional) - The session used for requesting URL, by default the HTTP request will reuse the current session. Setting "),s("code",[e._v("session")]),e._v(" to "),s("code",[e._v("null")]),e._v(" would use a random independent session. This is only used for URL responses.")]),e._v(" "),s("li",[s("code",[e._v("uploadData")]),e._v(" "),s("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-response-upload-data.html"}},[e._v("ProtocolResponseUploadData")]),e._v(" (optional) - The data used as upload data. This is only used for URL responses when "),s("code",[e._v("method")]),e._v(" is "),s("code",[e._v('"POST"')]),e._v(".")],1)])])}),[],!1,null,null,null);o.default=r.exports}}]);