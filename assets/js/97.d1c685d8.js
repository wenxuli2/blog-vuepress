(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{575:function(t,s,e){"use strict";e.r(s);var a=e(20),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"protocol"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol"}},[t._v("#")]),t._v(" protocol")]),t._v(" "),e("blockquote",[e("p",[t._v("注册自定义协议并拦截基于现有协议的请求。")])]),t._v(" "),e("p",[t._v("进程："),e("RouterLink",{attrs:{to:"/《Electron中文文档》/glossary.html#main-process"}},[t._v("主进程")])],1),t._v(" "),e("p",[t._v("实现与 "),e("code",[t._v("file://")]),t._v(" 协议具有相同效果的协议的示例:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" protocol "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'electron'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("whenReady")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  protocol"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerFileProtocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'atom'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" url "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("normalize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("__dirname"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[t._v("** 注意: **除了指定的方法, 其他方法只能在 "),e("code",[t._v("app")]),t._v(" 模块的 "),e("code",[t._v("ready")]),t._v(" 事件被触发后使用。")]),t._v(" "),e("h2",{attrs:{id:"using-protocol-with-a-custom-partition-or-session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-protocol-with-a-custom-partition-or-session"}},[t._v("#")]),t._v(" Using "),e("code",[t._v("protocol")]),t._v(" with a custom "),e("code",[t._v("partition")]),t._v(" or "),e("code",[t._v("session")])]),t._v(" "),e("p",[t._v("A protocol is registered to a specific Electron "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/session.html"}},[e("code",[t._v("session")])]),t._v(" object. If you don't specify a session, then your "),e("code",[t._v("protocol")]),t._v(" will be applied to the default session that Electron uses. However, if you define a "),e("code",[t._v("partition")]),t._v(" or "),e("code",[t._v("session")]),t._v(" on your "),e("code",[t._v("browserWindow")]),t._v("'s "),e("code",[t._v("webPreferences")]),t._v(", then that window will use a different session and your custom protocol will not work if you just use "),e("code",[t._v("electron.protocol.XXX")]),t._v(".")],1),t._v(" "),e("p",[t._v("To have your custom protocol work in combination with a custom session, you need to register it to that session explicitly.")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" session"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" protocol "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'electron'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("whenReady")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" partition "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'persist:example'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ses "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" session"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromPartition")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("partition"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  ses"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("protocol"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerFileProtocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'atom'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" url "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("normalize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("__dirname"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  mainWindow "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BrowserWindow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("webPreferences")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" partition "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("h2",{attrs:{id:"方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),e("p",[e("code",[t._v("protocol")]),t._v(" 模块具有以下方法：")]),t._v(" "),e("h3",{attrs:{id:"protocol-registerschemesasprivileged-customschemes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-registerschemesasprivileged-customschemes"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.registerSchemesAsPrivileged(customSchemes)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("customSchemes")]),t._v(" "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/custom-scheme.html"}},[t._v("CustomScheme[]")])],1)]),t._v(" "),e("p",[e("strong",[t._v("注意.")]),t._v(" 此方法只能在 "),e("code",[t._v("app")]),t._v(" 的 "),e("code",[t._v("ready")]),t._v(" 事件触发前调用，且只能调用一次")]),t._v(" "),e("p",[t._v("Registers the "),e("code",[t._v("scheme")]),t._v(" as standard, secure, bypasses content security policy for resources, allows registering ServiceWorker, supports fetch API, and streaming video/audio. Specify a privilege with the value of "),e("code",[t._v("true")]),t._v(" to enable the capability.")]),t._v(" "),e("p",[t._v("An example of registering a privileged scheme, that bypasses Content Security Policy:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" protocol "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'electron'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nprotocol"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerSchemesAsPrivileged")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("scheme")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("privileges")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("bypassCSP")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("标准scheme遵循 RFC 3986 所设定的 "),e("a",{attrs:{href:"https://tools.ietf.org/html/rfc3986#section-3",target:"_blank",rel:"noopener noreferrer"}},[t._v("URI泛型语法 "),e("OutboundLink")],1),t._v("。 例如, "),e("code",[t._v("http")]),t._v(" 和 "),e("code",[t._v("https")]),t._v(" 是标准协议, 而 "),e("code",[t._v("file")]),t._v(" 不是。")]),t._v(" "),e("p",[t._v("Registering a scheme as standard allows relative and absolute resources to be resolved correctly when served. 否则, 该协议将表现为 "),e("code",[t._v("file")]),t._v(" 协议, 而且，这种文件协议将不能解析相对路径。")]),t._v(" "),e("p",[t._v("例如, 当您使用自定义协议加载以下内容时，如果你不将其注册为标准scheme, 图片将不会被加载, 因为非标准scheme无法识别相对 路径:")]),t._v(" "),e("div",{staticClass:"language-html line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("test.png"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("注册一个scheme作为标准scheme将允许其通过"),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/LocalFileSystem",target:"_blank",rel:"noopener noreferrer"}},[t._v("FileSystem 接口"),e("OutboundLink")],1),t._v("访问文件。 否则, 渲染器将会因为该scheme，而抛出一个安全性错误。")]),t._v(" "),e("p",[t._v("By default web storage apis (localStorage, sessionStorage, webSQL, indexedDB, cookies) are disabled for non standard schemes. So in general if you want to register a custom protocol to replace the "),e("code",[t._v("http")]),t._v(" protocol, you have to register it as a standard scheme.")]),t._v(" "),e("p",[t._v("Protocols that use streams (http and stream protocols) should set "),e("code",[t._v("stream: true")]),t._v(". The "),e("code",[t._v("<video>")]),t._v(" and "),e("code",[t._v("<audio>")]),t._v(" HTML elements expect protocols to buffer their responses by default. The "),e("code",[t._v("stream")]),t._v(" flag configures those elements to correctly expect streaming responses.")]),t._v(" "),e("h3",{attrs:{id:"protocol-registerfileprotocol-scheme-handler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-registerfileprotocol-scheme-handler"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.registerFileProtocol(scheme, handler)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("scheme")]),t._v(" String")]),t._v(" "),e("li",[e("code",[t._v("handler")]),t._v(" 函数\n"),e("ul",[e("li",[e("code",[t._v("request")]),t._v(" "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-request.html"}},[t._v("ProtocolRequest")])],1),t._v(" "),e("li",[e("code",[t._v("callback")]),t._v(" Function\n"),e("ul",[e("li",[e("code",[t._v("response")]),t._v(" (String | "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-response.html"}},[t._v("ProtocolResponse")]),t._v(")")],1)])])])])]),t._v(" "),e("p",[t._v("Returns "),e("code",[t._v("Boolean")]),t._v(" - Whether the protocol was successfully registered")]),t._v(" "),e("p",[t._v("Registers a protocol of "),e("code",[t._v("scheme")]),t._v(" that will send a file as the response. The "),e("code",[t._v("handler")]),t._v(" will be called with "),e("code",[t._v("request")]),t._v(" and "),e("code",[t._v("callback")]),t._v(" where "),e("code",[t._v("request")]),t._v(" is an incoming request for the "),e("code",[t._v("scheme")]),t._v(".")]),t._v(" "),e("p",[t._v("要处理 "),e("code",[t._v("request")]),t._v(", 应当使用文件的路径或具有 "),e("code",[t._v("path")]),t._v(" 属性的对象来调用 "),e("code",[t._v("callback")]),t._v("。例如:"),e("code",[t._v("callback(filePath)")]),t._v("或 "),e("code",[t._v("callback({ path: filePath })")]),t._v(". The "),e("code",[t._v("filePath")]),t._v(" must be an absolute path.")]),t._v(" "),e("p",[t._v("By default the "),e("code",[t._v("scheme")]),t._v(" is treated like "),e("code",[t._v("http:")]),t._v(', which is parsed differently from protocols that follow the "generic URI syntax" like '),e("code",[t._v("file:")]),t._v(".")]),t._v(" "),e("h3",{attrs:{id:"protocol-registerbufferprotocol-scheme-handler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-registerbufferprotocol-scheme-handler"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.registerBufferProtocol(scheme, handler)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("scheme")]),t._v(" String")]),t._v(" "),e("li",[e("code",[t._v("handler")]),t._v(" 函数\n"),e("ul",[e("li",[e("code",[t._v("request")]),t._v(" "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-request.html"}},[t._v("ProtocolRequest")])],1),t._v(" "),e("li",[e("code",[t._v("callback")]),t._v(" Function\n"),e("ul",[e("li",[e("code",[t._v("response")]),t._v(" (Buffer | "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-response.html"}},[t._v("ProtocolResponse")]),t._v(")")],1)])])])])]),t._v(" "),e("p",[t._v("Returns "),e("code",[t._v("Boolean")]),t._v(" - Whether the protocol was successfully registered")]),t._v(" "),e("p",[t._v("注册一个 "),e("code",[t._v("scheme")]),t._v(" 协议, 将 "),e("code",[t._v("Buffer")]),t._v("作为响应发送")]),t._v(" "),e("p",[t._v("The usage is the same with "),e("code",[t._v("registerFileProtocol")]),t._v(", except that the "),e("code",[t._v("callback")]),t._v(" should be called with either a "),e("code",[t._v("Buffer")]),t._v(" object or an object that has the "),e("code",[t._v("data")]),t._v(" property.")]),t._v(" "),e("p",[t._v("示例：")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("protocol"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerBufferProtocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'atom'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("mimeType")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/html'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Buffer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<h5>Response</h5>'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h3",{attrs:{id:"protocol-registerstringprotocol-scheme-handler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-registerstringprotocol-scheme-handler"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.registerStringProtocol(scheme, handler)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("scheme")]),t._v(" String")]),t._v(" "),e("li",[e("code",[t._v("handler")]),t._v(" 函数\n"),e("ul",[e("li",[e("code",[t._v("request")]),t._v(" "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-request.html"}},[t._v("ProtocolRequest")])],1),t._v(" "),e("li",[e("code",[t._v("callback")]),t._v(" Function\n"),e("ul",[e("li",[e("code",[t._v("response")]),t._v(" (String | "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-response.html"}},[t._v("ProtocolResponse")]),t._v(")")],1)])])])])]),t._v(" "),e("p",[t._v("Returns "),e("code",[t._v("Boolean")]),t._v(" - Whether the protocol was successfully registered")]),t._v(" "),e("p",[t._v("注册一个 "),e("code",[t._v("scheme")]),t._v(" 协议, 将 "),e("code",[t._v("String")]),t._v(" 作为响应发送")]),t._v(" "),e("p",[t._v("The usage is the same with "),e("code",[t._v("registerFileProtocol")]),t._v(", except that the "),e("code",[t._v("callback")]),t._v(" should be called with either a "),e("code",[t._v("String")]),t._v(" or an object that has the "),e("code",[t._v("data")]),t._v(" property.")]),t._v(" "),e("h3",{attrs:{id:"protocol-registerhttpprotocol-scheme-handler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-registerhttpprotocol-scheme-handler"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.registerHttpProtocol(scheme, handler)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("scheme")]),t._v(" String")]),t._v(" "),e("li",[e("code",[t._v("handler")]),t._v(" 函数\n"),e("ul",[e("li",[e("code",[t._v("request")]),t._v(" "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-request.html"}},[t._v("ProtocolRequest")])],1),t._v(" "),e("li",[e("code",[t._v("callback")]),t._v(" Function\n"),e("ul",[e("li",[e("code",[t._v("response")]),t._v(" ProtocolResponse")])])])])])]),t._v(" "),e("p",[t._v("Returns "),e("code",[t._v("Boolean")]),t._v(" - Whether the protocol was successfully registered")]),t._v(" "),e("p",[t._v("注册一个 "),e("code",[t._v("scheme")]),t._v(" 协议, 将 HTTP 请求作为响应发送")]),t._v(" "),e("p",[t._v("The usage is the same with "),e("code",[t._v("registerFileProtocol")]),t._v(", except that the "),e("code",[t._v("callback")]),t._v(" should be called with an object that has the "),e("code",[t._v("url")]),t._v(" property.")]),t._v(" "),e("h3",{attrs:{id:"protocol-registerstreamprotocol-scheme-handler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-registerstreamprotocol-scheme-handler"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.registerStreamProtocol(scheme, handler)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("scheme")]),t._v(" String")]),t._v(" "),e("li",[e("code",[t._v("handler")]),t._v(" 函数\n"),e("ul",[e("li",[e("code",[t._v("request")]),t._v(" "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-request.html"}},[t._v("ProtocolRequest")])],1),t._v(" "),e("li",[e("code",[t._v("callback")]),t._v(" Function\n"),e("ul",[e("li",[e("code",[t._v("response")]),t._v(" (ReadableStream | "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-response.html"}},[t._v("ProtocolResponse")]),t._v(")")],1)])])])])]),t._v(" "),e("p",[t._v("Returns "),e("code",[t._v("Boolean")]),t._v(" - Whether the protocol was successfully registered")]),t._v(" "),e("p",[t._v("Registers a protocol of "),e("code",[t._v("scheme")]),t._v(" that will send a stream as a response.")]),t._v(" "),e("p",[t._v("The usage is the same with "),e("code",[t._v("registerFileProtocol")]),t._v(", except that the "),e("code",[t._v("callback")]),t._v(" should be called with either a "),e("a",{attrs:{href:"https://nodejs.org/api/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("ReadableStream")]),e("OutboundLink")],1),t._v(" object or an object that has the "),e("code",[t._v("data")]),t._v(" property.")]),t._v(" "),e("p",[t._v("示例：")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" protocol "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'electron'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" PassThrough "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStream")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("text")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rv "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PassThrough")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PassThrough is also a Readable stream")]),t._v("\n  rv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  rv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" rv\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nprotocol"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerStreamProtocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'atom'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("statusCode")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("headers")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'content-type'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/html'")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStream")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<h5>Response</h5>'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[t._v("It is possible to pass any object that implements the readable stream API (emits "),e("code",[t._v("data")]),t._v("/"),e("code",[t._v("end")]),t._v("/"),e("code",[t._v("error")]),t._v(" events). For example, here's how a file could be returned:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("protocol"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerStreamProtocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'atom'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'index.html'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h3",{attrs:{id:"protocol-unregisterprotocol-scheme"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-unregisterprotocol-scheme"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.unregisterProtocol(scheme)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("scheme")]),t._v(" String")])]),t._v(" "),e("p",[t._v("Returns "),e("code",[t._v("Boolean")]),t._v(" - Whether the protocol was successfully unregistered")]),t._v(" "),e("p",[t._v("取消对自定义"),e("code",[t._v("scheme")]),t._v("的注册")]),t._v(" "),e("h3",{attrs:{id:"protocol-isprotocolregistered-scheme"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-isprotocolregistered-scheme"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.isProtocolRegistered(scheme)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("scheme")]),t._v(" String")])]),t._v(" "),e("p",[t._v("Returns "),e("code",[t._v("Boolean")]),t._v(" - Whether "),e("code",[t._v("scheme")]),t._v(" is already registered.")]),t._v(" "),e("h3",{attrs:{id:"protocol-interceptfileprotocol-scheme-handler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-interceptfileprotocol-scheme-handler"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.interceptFileProtocol(scheme, handler)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("scheme")]),t._v(" String")]),t._v(" "),e("li",[e("code",[t._v("handler")]),t._v(" 函数\n"),e("ul",[e("li",[e("code",[t._v("request")]),t._v(" "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-request.html"}},[t._v("ProtocolRequest")])],1),t._v(" "),e("li",[e("code",[t._v("callback")]),t._v(" Function\n"),e("ul",[e("li",[e("code",[t._v("response")]),t._v(" (String | "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-response.html"}},[t._v("ProtocolResponse")]),t._v(")")],1)])])])])]),t._v(" "),e("p",[t._v("Returns "),e("code",[t._v("Boolean")]),t._v(" - Whether the protocol was successfully intercepted")]),t._v(" "),e("p",[t._v("终止 "),e("code",[t._v("scheme")]),t._v(" 协议, 并将 "),e("code",[t._v("handler")]),t._v(" 作为该protocol新的处理方式，即返回一个file。")]),t._v(" "),e("h3",{attrs:{id:"protocol-interceptstringprotocol-scheme-handler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-interceptstringprotocol-scheme-handler"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.interceptStringProtocol(scheme, handler)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("scheme")]),t._v(" String")]),t._v(" "),e("li",[e("code",[t._v("handler")]),t._v(" 函数\n"),e("ul",[e("li",[e("code",[t._v("request")]),t._v(" "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-request.html"}},[t._v("ProtocolRequest")])],1),t._v(" "),e("li",[e("code",[t._v("callback")]),t._v(" Function\n"),e("ul",[e("li",[e("code",[t._v("response")]),t._v(" (String | "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-response.html"}},[t._v("ProtocolResponse")]),t._v(")")],1)])])])])]),t._v(" "),e("p",[t._v("Returns "),e("code",[t._v("Boolean")]),t._v(" - Whether the protocol was successfully intercepted")]),t._v(" "),e("p",[t._v("终止 "),e("code",[t._v("scheme")]),t._v(" 协议, 并将 "),e("code",[t._v("handler")]),t._v(" 作为该protocol新的处理方式，即返回一个"),e("code",[t._v("String")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"protocol-interceptbufferprotocol-scheme-handler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-interceptbufferprotocol-scheme-handler"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.interceptBufferProtocol(scheme, handler)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("scheme")]),t._v(" String")]),t._v(" "),e("li",[e("code",[t._v("handler")]),t._v(" 函数\n"),e("ul",[e("li",[e("code",[t._v("request")]),t._v(" "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-request.html"}},[t._v("ProtocolRequest")])],1),t._v(" "),e("li",[e("code",[t._v("callback")]),t._v(" Function\n"),e("ul",[e("li",[e("code",[t._v("response")]),t._v(" (Buffer | "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-response.html"}},[t._v("ProtocolResponse")]),t._v(")")],1)])])])])]),t._v(" "),e("p",[t._v("Returns "),e("code",[t._v("Boolean")]),t._v(" - Whether the protocol was successfully intercepted")]),t._v(" "),e("p",[t._v("终止 "),e("code",[t._v("scheme")]),t._v(" 协议, 并将 "),e("code",[t._v("handler")]),t._v(" 作为该protocol新的处理方式，即返回一个"),e("code",[t._v("Buffer")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"protocol-intercepthttpprotocol-scheme-handler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-intercepthttpprotocol-scheme-handler"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.interceptHttpProtocol(scheme, handler)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("scheme")]),t._v(" String")]),t._v(" "),e("li",[e("code",[t._v("handler")]),t._v(" 函数\n"),e("ul",[e("li",[e("code",[t._v("request")]),t._v(" "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-request.html"}},[t._v("ProtocolRequest")])],1),t._v(" "),e("li",[e("code",[t._v("callback")]),t._v(" Function\n"),e("ul",[e("li",[e("code",[t._v("response")]),t._v(" "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-response.html"}},[t._v("ProtocolResponse")])],1)])])])])]),t._v(" "),e("p",[t._v("Returns "),e("code",[t._v("Boolean")]),t._v(" - Whether the protocol was successfully intercepted")]),t._v(" "),e("p",[t._v("终止 "),e("code",[t._v("scheme")]),t._v(" 协议, 并将 "),e("code",[t._v("handler")]),t._v(" 作为该protocol新的处理方式，即返回一个新 HTTP 请求。")]),t._v(" "),e("h3",{attrs:{id:"protocol-interceptstreamprotocol-scheme-handler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-interceptstreamprotocol-scheme-handler"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.interceptStreamProtocol(scheme, handler)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("scheme")]),t._v(" String")]),t._v(" "),e("li",[e("code",[t._v("handler")]),t._v(" 函数\n"),e("ul",[e("li",[e("code",[t._v("request")]),t._v(" "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-request.html"}},[t._v("ProtocolRequest")])],1),t._v(" "),e("li",[e("code",[t._v("callback")]),t._v(" Function\n"),e("ul",[e("li",[e("code",[t._v("response")]),t._v(" (ReadableStream | "),e("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/protocol-response.html"}},[t._v("ProtocolResponse")]),t._v(")")],1)])])])])]),t._v(" "),e("p",[t._v("Returns "),e("code",[t._v("Boolean")]),t._v(" - Whether the protocol was successfully intercepted")]),t._v(" "),e("p",[t._v("它与 "),e("code",[t._v("registerStreamProtocol")]),t._v("方法相同, 不过它是用来替换现有的protocol处理方式。")]),t._v(" "),e("h3",{attrs:{id:"protocol-uninterceptprotocol-scheme"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-uninterceptprotocol-scheme"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.uninterceptProtocol(scheme)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("scheme")]),t._v(" String")])]),t._v(" "),e("p",[t._v("Returns "),e("code",[t._v("Boolean")]),t._v(" - Whether the protocol was successfully unintercepted")]),t._v(" "),e("p",[t._v("移除为 "),e("code",[t._v("scheme")]),t._v(" 安装的拦截器，并还原其原始处理方式。")]),t._v(" "),e("h3",{attrs:{id:"protocol-isprotocolintercepted-scheme"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-isprotocolintercepted-scheme"}},[t._v("#")]),t._v(" "),e("code",[t._v("protocol.isProtocolIntercepted(scheme)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("scheme")]),t._v(" String")])]),t._v(" "),e("p",[t._v("Returns "),e("code",[t._v("Boolean")]),t._v(" - Whether "),e("code",[t._v("scheme")]),t._v(" is already intercepted.")])])}),[],!1,null,null,null);s.default=r.exports}}]);