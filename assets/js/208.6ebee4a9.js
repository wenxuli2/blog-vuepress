(window.webpackJsonp=window.webpackJsonp||[]).push([[208],{686:function(e,s,n){"use strict";n.r(s);var a=n(20),t=Object(a.a)({},(function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"源码目录结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#源码目录结构"}},[e._v("#")]),e._v(" 源码目录结构")]),e._v(" "),n("p",[e._v("Electron 的源代码主要依据 Chromium 的拆分约定被拆成了许多部分。")]),e._v(" "),n("p",[e._v("为了更好地理解源代码，您可能需要了解一下 "),n("a",{attrs:{href:"https://dev.chromium.org/developers/design-documents/multi-process-architecture",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chromium 的多进程架构"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("h2",{attrs:{id:"源代码的目录结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#源代码的目录结构"}},[e._v("#")]),e._v(" 源代码的目录结构")]),e._v(" "),n("div",{staticClass:"language-diff line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-diff"}},[n("code",[e._v("Electron\n├── build/ - Build configuration files needed to build with GN.\n├── buildflags/ - Determines the set of features that can be conditionally built.\n├── chromium_src/ - Source code copied from Chromium that isn't part of the content layer.\n├── default_app/ - A default app run when Electron is started without\n|                  providing a consumer app.\n├── docs/ - Electron's documentation.\n|   ├── api/ - Documentation for Electron's externally-facing modules and APIs.\n|   ├── development/ - Documentation to aid in developing for and with Electron.\n|   ├── fiddles/ - A set of code snippets one can run in Electron Fiddle.\n|   ├── images/ - Images used in documentation.\n|   └── tutorial/ - Tutorial documents for various aspects of Electron.\n├── lib/ - JavaScript/TypeScript source code.\n|   ├── browser/ - Main process initialization code.\n|   |   ├── api/ - API implementation for main process modules.\n|   |   └── remote/ - Code related to the remote module as it is\n|   |                 used in the main process.\n|   ├── common/ - Relating to logic needed by both main and renderer processes.\n|   |   └── api/ - API implementation for modules that can be used in\n|   |              both the main and renderer processes\n|   ├── isolated_renderer/ - Handles creation of isolated renderer processes when\n|   |                        contextIsolation is enabled.\n|   ├── renderer/ - Renderer process initialization code.\n|   |   ├── api/ - API implementation for renderer process modules.\n|   |   ├── extension/ - Code related to use of Chrome Extensions\n|   |   |                in Electron's renderer process.\n|   |   ├── remote/ - Logic that handles use of the remote module in\n|   |   |             the main process.\n|   |   └── web-view/ - Logic that handles the use of webviews in the\n|   |                   renderer process.\n|   ├── sandboxed_renderer/ - Logic that handles creation of sandboxed renderer\n|   |   |                     processes.\n|   |   └── api/ - API implementation for sandboxed renderer processes.\n|   └── worker/ - Logic that handles proper functionality of Node.js\n|                 environments in Web Workers.\n├── patches/ - Patches applied on top of Electron's core dependencies\n|   |          in order to handle differences between our use cases and\n|   |          default functionality.\n|   ├── boringssl/ - Patches applied to Google's fork of OpenSSL, BoringSSL.\n|   ├── chromium/ - Patches applied to Chromium.\n|   ├── node/ - Patches applied on top of Node.js.\n|   └── v8/ - Patches applied on top of Google's V8 engine.\n├── shell/ - C++ source code.\n|   ├── app/ - 系统入口代码.\n|   ├── browser/ - 包含了主窗口、UI 和所有主进程相关的东西.\n|   |   |          它会告诉渲染进程如何管理页面.\n|   |   ├── ui/ - 不同平台上 UI 部分的实现.\n|   |   |   ├── cocoa/ - Cocoa 部分的源代码.\n|   |   |   ├── win/ - Windows GUI 部分的源代码.\n|   |   |   └── x/ - X11 部分的源代码.\n|   |   ├── api/ - 主进程 API 的实现.\n|   |   ├── net/ - 网络相关的代码.\n|   |   ├── mac/ - 与 Mac 有关的 Objective-C 代码.\n|   |   └── resources/ - Icons, platform-dependent files, etc.\n|   ├── renderer/ - Code that runs in renderer process.\n|   |   └── api/ - 渲染进程 API 的实现.\n|   └── common/ - 同时被主进程和渲染进程用到的代码,\n|       |         包括了一些用来将 node 的消息循环整合到 Chromium 的\n|       |         消息循环中时用到的工具函数和代码.\n|       └── api/ - 同时被主进程和渲染进程使用到的 API 的实现,\n|                  并且是 Electron 内置模块的基础.\n├── spec/ - Components of Electron's test suite run in the renderer process.\n├── spec-main/ - Components of Electron's test suite run in the main process.\n└── BUILD.gn - Electron 的构建规则.\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br"),n("span",{staticClass:"line-number"},[e._v("25")]),n("br"),n("span",{staticClass:"line-number"},[e._v("26")]),n("br"),n("span",{staticClass:"line-number"},[e._v("27")]),n("br"),n("span",{staticClass:"line-number"},[e._v("28")]),n("br"),n("span",{staticClass:"line-number"},[e._v("29")]),n("br"),n("span",{staticClass:"line-number"},[e._v("30")]),n("br"),n("span",{staticClass:"line-number"},[e._v("31")]),n("br"),n("span",{staticClass:"line-number"},[e._v("32")]),n("br"),n("span",{staticClass:"line-number"},[e._v("33")]),n("br"),n("span",{staticClass:"line-number"},[e._v("34")]),n("br"),n("span",{staticClass:"line-number"},[e._v("35")]),n("br"),n("span",{staticClass:"line-number"},[e._v("36")]),n("br"),n("span",{staticClass:"line-number"},[e._v("37")]),n("br"),n("span",{staticClass:"line-number"},[e._v("38")]),n("br"),n("span",{staticClass:"line-number"},[e._v("39")]),n("br"),n("span",{staticClass:"line-number"},[e._v("40")]),n("br"),n("span",{staticClass:"line-number"},[e._v("41")]),n("br"),n("span",{staticClass:"line-number"},[e._v("42")]),n("br"),n("span",{staticClass:"line-number"},[e._v("43")]),n("br"),n("span",{staticClass:"line-number"},[e._v("44")]),n("br"),n("span",{staticClass:"line-number"},[e._v("45")]),n("br"),n("span",{staticClass:"line-number"},[e._v("46")]),n("br"),n("span",{staticClass:"line-number"},[e._v("47")]),n("br"),n("span",{staticClass:"line-number"},[e._v("48")]),n("br"),n("span",{staticClass:"line-number"},[e._v("49")]),n("br"),n("span",{staticClass:"line-number"},[e._v("50")]),n("br"),n("span",{staticClass:"line-number"},[e._v("51")]),n("br"),n("span",{staticClass:"line-number"},[e._v("52")]),n("br"),n("span",{staticClass:"line-number"},[e._v("53")]),n("br"),n("span",{staticClass:"line-number"},[e._v("54")]),n("br"),n("span",{staticClass:"line-number"},[e._v("55")]),n("br"),n("span",{staticClass:"line-number"},[e._v("56")]),n("br"),n("span",{staticClass:"line-number"},[e._v("57")]),n("br"),n("span",{staticClass:"line-number"},[e._v("58")]),n("br"),n("span",{staticClass:"line-number"},[e._v("59")]),n("br"),n("span",{staticClass:"line-number"},[e._v("60")]),n("br"),n("span",{staticClass:"line-number"},[e._v("61")]),n("br"),n("span",{staticClass:"line-number"},[e._v("62")]),n("br"),n("span",{staticClass:"line-number"},[e._v("63")]),n("br"),n("span",{staticClass:"line-number"},[e._v("64")]),n("br")])]),n("h2",{attrs:{id:"其它目录的结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其它目录的结构"}},[e._v("#")]),e._v(" 其它目录的结构")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v(".cloeci")]),e._v(" - CircleCI 的 CI 配置文件。")]),e._v(" "),n("li",[n("strong",[e._v(".github")]),e._v(" - GitHub专用配置文件，包括 issue 模板和 CODEOWNERS。")]),e._v(" "),n("li",[n("strong",[e._v("dist")]),e._v(" - 由脚本 "),n("code",[e._v("script/create-dist.py")]),e._v(" 创建的临时发布目录.")]),e._v(" "),n("li",[n("strong",[e._v("node_modules")]),e._v(" - 在构建中用到的第三方 node 模块.")]),e._v(" "),n("li",[n("strong",[e._v("npm")]),e._v(" - 通过 npm 安装 Electron 的逻辑。")]),e._v(" "),n("li",[n("strong",[e._v("out")]),e._v(" - "),n("code",[e._v("ninja")]),e._v(" 的临时输出目录.")]),e._v(" "),n("li",[n("strong",[e._v("script")]),e._v(" - 用于诸如构建、打包、测试等开发用途的脚本等.")])]),e._v(" "),n("div",{staticClass:"language-diff line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-diff"}},[n("code",[e._v("script/ - The set of all scripts Electron runs for a variety of purposes.\n├── codesign/ - Fakes codesigning for Electron apps; used for testing.\n├── lib/ - Miscellaneous python utility scripts.\n└── release/ - Scripts run during Electron's release process.\n"),n("span",{pre:!0,attrs:{class:"token unchanged"}},[n("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),n("span",{pre:!0,attrs:{class:"token line"}},[e._v("   ├── notes/ - Generates release notes for new Electron versions.\n")]),n("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),n("span",{pre:!0,attrs:{class:"token line"}},[e._v("   └── uploaders/ - Uploads various release-related files during release.\n")])])])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br")])]),n("ul",[n("li",[n("strong",[e._v("typings")]),e._v(" - Electron的内部代码的 TypeScript typings。")])])])}),[],!1,null,null,null);s.default=t.exports}}]);