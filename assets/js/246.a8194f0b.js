(window.webpackJsonp=window.webpackJsonp||[]).push([[246],{724:function(t,s,a){"use strict";a.r(s);var n=a(20),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"流程模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程模型"}},[t._v("#")]),t._v(" 流程模型")]),t._v(" "),a("p",[t._v("Electron 继承了来自 Chromium 的多进程架构，这使得此框架在架构上非常相似于一个现代的网页浏览器。 在本指南中，我们将会阐述那些我们运用于 最小的 "),a("RouterLink",{attrs:{to:"/《Electron中文文档》/tutorial/quick-start.html"}},[t._v("快速启动应用")]),t._v(" 中的关于 Electron 的概念性知识。")],1),t._v(" "),a("h2",{attrs:{id:"为什么不是一个单一的进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么不是一个单一的进程"}},[t._v("#")]),t._v(" 为什么不是一个单一的进程？")]),t._v(" "),a("p",[t._v("网页浏览器是个极其复杂的应用程序。 除了显示网页内容的主要能力之外，他们还有许多次要的职责，例如：管理众多窗口 ( 或 标签页 ) 和加载第三方扩展。")]),t._v(" "),a("p",[t._v("在早期，浏览器通常使用单个进程来处理所有这些功能。 虽然这种模式意味着您打开每个标签页的开销较少，但也同时意味着一个网站的崩溃或无响应会影响到整个浏览器。")]),t._v(" "),a("h2",{attrs:{id:"多进程模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多进程模型"}},[t._v("#")]),t._v(" 多进程模型")]),t._v(" "),a("p",[t._v("为了解决这个问题，Chrome 团队决定让每个标签页在自己的进程中渲染， 从而限制了一个网页上的有误或恶意代码可能导致的对整个应用程序造成的伤害。 然后用单个浏览器进程控制这些標籤頁进程，以及整个应用程序的生命周期。 下方来自 "),a("a",{attrs:{href:"https://www.google.com/googlebooks/chrome/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chrome 漫画"),a("OutboundLink")],1),t._v(" 的图表可视化了此模型：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/chrome-processes.png",alt:"Chrome的多进程架构"}})]),t._v(" "),a("p",[t._v("Electron 应用程序的结构非常相似。 作为应用开发者，您控制着两种类型的进程：主进程和渲染器。 这些类似于上面概述的 Chrome 自己的浏览器和其渲染器进程。")]),t._v(" "),a("h2",{attrs:{id:"主进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主进程"}},[t._v("#")]),t._v(" 主进程")]),t._v(" "),a("p",[t._v("每个 Electron 应用都有一个单一的主进程，作为应用程序的入口点。 主进程在 Node.js 环境中运行，这意味着它具有 "),a("code",[t._v("require")]),t._v(" 模块和使用所有 Node.js API 的能力。")]),t._v(" "),a("h3",{attrs:{id:"窗口管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#窗口管理"}},[t._v("#")]),t._v(" 窗口管理")]),t._v(" "),a("p",[t._v("主进程的主要目的是使用 "),a("RouterLink",{attrs:{to:"/《Electron中文文档》/api/browser-window.html"}},[a("code",[t._v("BrowserWindow")])]),t._v(" 模块创建和管理应用程序窗口。")],1),t._v(" "),a("p",[a("code",[t._v("BrowserWindow")]),t._v(" 类的每个实例创建一个应用程序窗口，且在单独的渲染器进程中加载一个网页。 您可从主进程用 window 的 "),a("RouterLink",{attrs:{to:"/《Electron中文文档》/api/web-contents.html"}},[a("code",[t._v("webContent")])]),t._v(" 对象与网页内容进行交互。")],1),t._v(" "),a("div",{staticClass:"language-js title='main.js' line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" BrowserWindow "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'electron'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" win "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BrowserWindow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("800")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadURL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://github.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" contents "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" win"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("webContents\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("contents"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("blockquote",[a("p",[t._v("注意：渲染器进程也是为 "),a("RouterLink",{attrs:{to:"/《Electron中文文档》/tutorial/web-embeds.html"}},[t._v("web embeds")]),t._v(" 而被创建的，例如 "),a("code",[t._v("BrowserView")]),t._v(" 模块。 嵌入式网页内容也可访问 "),a("code",[t._v("webContents")]),t._v(" 对象。")],1)]),t._v(" "),a("p",[t._v("由于 "),a("code",[t._v("BrowserWindow")]),t._v(" 模块是一个 "),a("a",{attrs:{href:"https://nodejs.org/api/events.html#events_class_eventemitter",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("EventEmitter")]),a("OutboundLink")],1),t._v("， 所以您也可以为各种用户事件 ( 例如，最小化 或 最大化您的窗口 ) 添加处理程序。")]),t._v(" "),a("p",[t._v("当一个 "),a("code",[t._v("BrowserWindow")]),t._v(" 实例被销毁时，与其相应的渲染器进程也会被终止。")]),t._v(" "),a("h3",{attrs:{id:"应用程序生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用程序生命周期"}},[t._v("#")]),t._v(" 应用程序生命周期")]),t._v(" "),a("p",[t._v("主进程还能通过 Electron 的 "),a("RouterLink",{attrs:{to:"/《Electron中文文档》/api/app.html"}},[a("code",[t._v("app")])]),t._v(" 模块来控制您应用程序的生命周期。 该模块提供了一整套的事件和方法，可以使你添加自定义的应用程序行为 ( 例如：以编程方式退出您的应用程序、修改程序坞或显示关于面板 ) 。")],1),t._v(" "),a("p",[t._v("这是一个实际的例子，这个app来源于"),a("RouterLink",{attrs:{to:"/《Electron中文文档》/tutorial/quick-start.html#manage-your-windows-lifecycle"}},[t._v("快速入门指南")]),t._v("，用 "),a("code",[t._v("app")]),t._v(" API 创建了一个更原生的应用程序窗口体验。")],1),t._v(" "),a("div",{staticClass:"language-js title='main.js' line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// quitting the app when no windows are open on non-macOS platforms")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'window-all-closed'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("platform "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'darwin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("quit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"原生-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原生-api"}},[t._v("#")]),t._v(" 原生 API")]),t._v(" "),a("p",[t._v("为了使 Electron 的功能不仅仅限于对网页内容的封装，主进程也添加了自定义的 API 来与用户的作业系统进行交互。 Electron 有着多种控制原生桌面功能的模块，例如菜单、对话框以及托盘图标。")]),t._v(" "),a("p",[t._v("关于 Electron 主进程模块的完整列表，请参阅我们的 API 文档。")]),t._v(" "),a("h2",{attrs:{id:"渲染器进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染器进程"}},[t._v("#")]),t._v(" 渲染器进程")]),t._v(" "),a("p",[t._v("每个 Electron 应用都会为每个打开的 "),a("code",[t._v("BrowserWindow")]),t._v(" ( 与每个网页嵌入 ) 生成一个单独的渲染器进程。 洽如其名，渲染器负责 "),a("em",[t._v("渲染")]),t._v(" 网页内容。 所以实际上，运行于渲染器进程中的代码是须遵照网页标准的 (至少就目前使用的 Chromium 而言是如此) 。")]),t._v(" "),a("p",[t._v("因此，一个浏览器窗口中的所有的用户界面和应用功能，都应与您在网页开发上使用相同的工具和规范来进行攥写。")]),t._v(" "),a("p",[t._v("虽然解释每一个网页规范超出了本指南的范围，但您最起码要知道的是：")]),t._v(" "),a("ul",[a("li",[t._v("以一个 HTML 文件作为渲染器进程的入口点。")]),t._v(" "),a("li",[t._v("使用层叠样式表 (Cascading Style Sheets, CSS) 对 UI 添加样式。")]),t._v(" "),a("li",[t._v("通过 "),a("code",[t._v("<script>")]),t._v(" 元素可添加可执行的 JavaScript 代码。")])]),t._v(" "),a("p",[t._v("此外，这也意味着渲染器无权直接访问 "),a("code",[t._v("require")]),t._v(" 或其他 Node.js API。 为了在渲染器中直接包含 NPM 模块，您必须使用与在 web 开发時相同的打包工具 (例如 "),a("code",[t._v("webpack")]),t._v(" 或 "),a("code",[t._v("parcel")]),t._v(")")]),t._v(" "),a("blockquote",[a("p",[t._v("注意：渲染器进程可以生成一个完整的 Node.js 环境以便于开发。 在过去这是默认的，但如今此功能考虑到安全问题已经被禁用。")])]),t._v(" "),a("p",[t._v("此刻，您也许会好奇，您在渲染器进程中的用户介面该如何与 Node.js 和 Electron 的原生桌面功能进行交互，如果这些功能都仅适用于主进程的话。 而事实上，确实没有直接导入 Electron 內容脚本的方法。")]),t._v(" "),a("h2",{attrs:{id:"预加载脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预加载脚本"}},[t._v("#")]),t._v(" 预加载脚本")]),t._v(" "),t._v(" 预加载（preload）脚本包含了那些执行于渲染器进程中，且先于网页内容开始加载的代码 。 These scripts run within the renderer context, but are granted more privileges by having access to Node.js APIs.\n"),a("p",[t._v("预加载脚本可以在 "),a("code",[t._v("BrowserWindow")]),t._v(" 构造方法中的 "),a("code",[t._v("webPreferences")]),t._v(" 选项里被附加到主进程。")]),t._v(" "),a("div",{staticClass:"language-js title='main.js' line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" BrowserWindow "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'electron'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" win "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BrowserWindow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("webPreferences")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("preload")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path/to/preload.js'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("由于预加载脚本与渲染器共享同一个全局 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Window")]),a("OutboundLink")],1),t._v(" 接口，并且可以访问 Node.js API，因此它通过在 "),a("code",[t._v("window")]),t._v(" 全局中暴露任意您的网络内容可以随后使用的 API 来增强渲染器。")]),t._v(" "),a("p",[t._v("虽然预加载脚本与其所附加的渲染器在全局共享着一个 "),a("code",[t._v("window")]),t._v(" 变数，但您并不能从中直接附加任何变数到 "),a("code",[t._v("window")]),t._v(" 之中，因为 "),a("RouterLink",{attrs:{to:"/《Electron中文文档》/tutorial/context-isolation.html"}},[a("code",[t._v("contextIsolation")])]),t._v(" 是默认的。")],1),t._v(" "),a("div",{staticClass:"language-js title='preload.js' line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myAPI "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("desktop")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("div",{staticClass:"language-js title='renderer.js' line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myAPI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => undefined")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("语境隔离（Context Isolation）意味着预加载脚本与渲染器的主要运行环境是隔离开来的，以避免泄漏任何具特权的 API 到您的网页内容代码中。")]),t._v(" "),a("p",[t._v("取而代之，我们將使用 "),a("RouterLink",{attrs:{to:"/《Electron中文文档》/api/context-bridge.html"}},[a("code",[t._v("contextBridge")])]),t._v(" 模块来安全地实现交互：")],1),t._v(" "),a("div",{staticClass:"language-js title='preload.js' line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" contextBridge "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'electron'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ncontextBridge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exposeInMainWorld")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myAPI'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("desktop")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("div",{staticClass:"language-js title='renderer.js' line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myAPI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => { desktop: true }")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("此功能对两个主要目的來說非常有用：")]),t._v(" "),a("ul",[a("li",[t._v("通过暴露 "),a("RouterLink",{attrs:{to:"/《Electron中文文档》/api/ipc-renderer.html"}},[a("code",[t._v("ipcRenderer")])]),t._v(" 帮手模块于渲染器中，您可以使用 进程间通讯 ( inter-process communication, IPC ) 来从渲染器触发主进程任务 ( 反之亦然 ) 。")],1),t._v(" "),a("li",[t._v("如果您正在为远程 URL 上托管的现有 web 应用开发 Electron 封裝，则您可在渲染器的 "),a("code",[t._v("window")]),t._v(" 全局变量上添加自定义的属性，好在 web 客户端用上仅适用于桌面应用的设计逻辑 。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);