(window.webpackJsonp=window.webpackJsonp||[]).push([[229],{707:function(e,t,a){"use strict";a.r(t);var v=a(20),_=Object(v.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"electron-版本管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#electron-版本管理"}},[e._v("#")]),e._v(" Electron 版本管理")]),e._v(" "),a("blockquote",[a("p",[e._v("详细查看我们的版本控制策略和实现。")])]),e._v(" "),a("p",[e._v("自 2.0.0 版本起，Electron 遵循 "),a("a",{attrs:{href:"#semver"}},[e._v("SemVer")]),e._v("。 以下命令将安装最新稳定版的 Electron：")]),e._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" --save-dev electron\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("现有项目更新到最新的稳定版本:")]),e._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" --save-dev electron@latest\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h2",{attrs:{id:"版本1-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本1-x"}},[e._v("#")]),e._v(" 版本1.x")]),e._v(" "),a("p",[e._v("*小于 2.0 * 的 Electron 版本编号并不遵循 "),a("a",{attrs:{href:"https://semver.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("SemVer"),a("OutboundLink")],1),e._v(" 规范: major 版本对应最终用户 API 的变更, minor 版本更新对应 Chromium 的主版本更新, patch 版本更新会带来新功能和 bug 修复。 虽然方便开发人员合并功能，但却为面向客户端应用程序的开发人员带来了麻烦。 像Slack，Stride，Teams，Skype，VS Code，Atom和Desktop等主要应用程序的QA测试周期可能很长，稳定性是一个非常理想的结果。 尝试吸收错误修复时，采用新功能的风险很高。")]),e._v(" "),a("p",[e._v("以下是 1.x 策略的一个例子：")]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/versioning-sketch-0.png",alt:"1.x 版本"}})]),e._v(" "),a("p",[e._v("使用 "),a("code",[e._v("1.8.1")]),e._v("开发的应用程序无法吸收 "),a("code",[e._v("1.8.2")]),e._v(" 的功能，或者通过反向移植修复和维护新的发行版，无法采用 "),a("code",[e._v("1.8.3")]),e._v("错误修复。")]),e._v(" "),a("h2",{attrs:{id:"版本-2-0-和之后版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本-2-0-和之后版本"}},[e._v("#")]),e._v(" 版本 2.0 和之后版本")]),e._v(" "),a("p",[e._v("There are several major changes from our 1.x strategy outlined below. Each change is intended to satisfy the needs and priorities of developers/maintainers and app developers.")]),e._v(" "),a("ol",[a("li",[e._v("严格使用 SemVer")]),e._v(" "),a("li",[e._v("引入符合 semver 的 "),a("code",[e._v("-beta")]),e._v(" 标签")]),e._v(" "),a("li",[e._v("引入"),a("a",{attrs:{href:"https://conventionalcommits.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("常规提交消息"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("明确定义的稳定分支")]),e._v(" "),a("li",[a("code",[e._v("master")]),e._v("分支没有版本信息，只有稳定分支会包含版本信息。")])]),e._v(" "),a("p",[e._v("我们将详细介绍 git 分支是如何工作的，npm 标记是如何工作的，开发人员应该看到什么，以及如何能够支持更改。")]),e._v(" "),a("h1",{attrs:{id:"semver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#semver"}},[e._v("#")]),e._v(" SemVer")]),e._v(" "),a("p",[e._v("从 2.0 开始，Electron 将遵循 SemVer。")]),e._v(" "),a("p",[e._v("下面是一个表格，明确地将变化的类型映射到它们对应的 SemVer 类别 (例如Major，Minor，Patch)。")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Major 版本增量")]),e._v(" "),a("th",[e._v("Minor 版本增量")]),e._v(" "),a("th",[e._v("Patch 版本增量")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("Electron 突破性 API 变更")]),e._v(" "),a("td",[e._v("Electron 无突破性 API 变更")]),e._v(" "),a("td",[e._v("Electron bug fixes")])]),e._v(" "),a("tr",[a("td",[e._v("Node.js 重大版本更新")]),e._v(" "),a("td",[e._v("Node.js 次要版本更新")]),e._v(" "),a("td",[e._v("Node.js patch 版本更新")])]),e._v(" "),a("tr",[a("td",[e._v("Chromium 版本更新")]),e._v(" "),a("td"),e._v(" "),a("td",[e._v("修复相关的 chromium 补丁")])])])]),e._v(" "),a("p",[e._v("请注意，大多数 Chromium 更新都将被认为是破坏性的。 Fixes that can be backported will likely be cherry-picked as patches.")]),e._v(" "),a("h1",{attrs:{id:"稳定分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#稳定分支"}},[e._v("#")]),e._v(" 稳定分支")]),e._v(" "),a("p",[e._v("稳定分支是与主控并行运行的分支，仅接受与安全性或稳定性有关的最优提交。 这些分支永远不会合并回 master 分支.")]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/versioning-sketch-1.png",alt:"稳定分支"}})]),e._v(" "),a("p",[e._v("自 Electron 8 以来，稳定分支始终为 "),a("strong",[e._v("marjar")]),e._v(" 版本，并且根据以下模板 "),a("code",[e._v("$MAJOR-x-y")]),e._v(" 例如： "),a("code",[e._v("8-x-y")]),e._v("。  在此之前，我们使用 "),a("strong",[e._v("minor")]),e._v(" 版本行，并将它们命名为 "),a("code",[e._v("$MAJOR-$MINOR-x")]),e._v(" 例如： "),a("code",[e._v("2-0-x")])]),e._v(" "),a("p",[e._v("我们允许同时存在多个稳定分支，并且打算在任何时候至少支持两个并行支持安全修复。 "),a("img",{attrs:{src:"/images/versioning-sketch-2.png",alt:"多个稳定分支"}})]),e._v(" "),a("p",[e._v("GitHub不支持旧线路，但是其他分组可以自行获取所有权和返回稳定性和安全修复。 我们不鼓励这样做，但是认识到它使得许多应用程序开发人员的生活更轻松。")]),e._v(" "),a("h1",{attrs:{id:"测试版和bug修复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试版和bug修复"}},[e._v("#")]),e._v(" 测试版和Bug修复")]),e._v(" "),a("p",[e._v("开发人员想知道哪个版本可以 "),a("em",[e._v("安全")]),e._v(" 使用。 即使是简单的功能也会使应用程序变得复杂。 同时，锁定到一个固定的版本是很危险的，因为你忽略了自你的版本以来可能出现的安全补丁和错误修复。 我们的目标是在 "),a("code",[e._v("package.json")]),e._v(" 中允许以下标准的 semver 范围:")]),e._v(" "),a("ul",[a("li",[e._v("使用 "),a("code",[e._v("~ 2.0. 0")]),e._v(" 只接受您的 "),a("code",[e._v("2.0.0")]),e._v(" 版本的稳定性或安全性相关的修复程序。")]),e._v(" "),a("li",[e._v("使用 "),a("code",[e._v("^ 2.0. 0")]),e._v(" 可允许不破坏性的 _ 合理稳定 _ 功能以及安全性和 bug 修复。")])]),e._v(" "),a("p",[e._v("第二点重要的是使用 "),a("code",[e._v("^")]),e._v(" 的应用程序仍然能够期望合理的稳定性水平。 为了达到这个目的，SemVer允许使用一个 "),a("em",[e._v("pre-release 标识")]),e._v(" 来表示一个特定的版本还不够 "),a("em",[e._v("安全")]),e._v(" 或 "),a("em",[e._v("稳定")]),e._v("。")]),e._v(" "),a("p",[e._v("无论你选择什么，你将定期不得不在 "),a("code",[e._v("package.json")]),e._v(" 中打破版本，因为突破性变更是 Chromium 的一个常态。")]),e._v(" "),a("p",[e._v("过程如下:")]),e._v(" "),a("ol",[a("li",[e._v("All new major and minor releases lines begin with a beta series indicated by SemVer prerelease tags of "),a("code",[e._v("beta.N")]),e._v(", e.g. "),a("code",[e._v("2.0.0-beta.1")]),e._v(". After the first beta, subsequent beta releases must meet all of the following conditions:\n"),a("ol",[a("li",[e._v("更改是落后的 API 兼容 (允许废弃)")]),e._v(" "),a("li",[e._v("实现我们稳定的时间表的危险必须是低的。")])])]),e._v(" "),a("li",[e._v("如果允许更改需要在释放测试版之后进行，则使用并增加预放标签，例如"),a("code",[e._v("2.0.0-beta.2")]),e._v("。")]),e._v(" "),a("li",[e._v("如果特定的beta版本_通常被认为_是稳定的，那么它将作为稳定版本被重新发布，只改变版本信息。例如.0。 例如 "),a("code",[e._v("2.0.0-beta.1")]),e._v(". 在第一个稳定之后，所有的变化都必须落后兼容的 bug 或安全修复。")]),e._v(" "),a("li",[e._v("如果未来错误修复或安全补丁一旦发布稳定，它们将被应用，并且 "),a("em",[e._v("补丁")]),e._v(" 版本被增量 ，例如 "),a("code",[e._v("2.0.1")]),e._v("。")])]),e._v(" "),a("p",[e._v("特别地，上述步骤意味着：")]),e._v(" "),a("ol",[a("li",[e._v("在测试周期的第 3 周前允许非破坏性的 API 更改，即使这些变化有可能造成适度的副影响。")]),e._v(" "),a("li",[e._v("Admitting feature-flagged changes, that do not otherwise alter existing code paths, at most points in the beta cycle is okay. Users can explicitly enable those flags in their apps.")]),e._v(" "),a("li",[e._v("Admitting features of any sort after Week 3 in the beta cycle is 👎 without a very good reason.")])]),e._v(" "),a("p",[e._v("对于每个主要和次要的颠覆，你都应该像以下示例一样进行操作：")]),e._v(" "),a("div",{staticClass:"language-plaintext line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plaintext"}},[a("code",[e._v("2.0.0-beta.1\n2.0.0-beta.2\n2.0.0-beta.3\n2.0.0\n2.0.1\n2.0.2\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("图片中的生命周期示例:")]),e._v(" "),a("ul",[a("li",[e._v("A new release branch is created that includes the latest set of features. 它会被发布为 "),a("code",[e._v("2.0.0-beta.1")]),e._v("。 "),a("img",{attrs:{src:"/images/versioning-sketch-3.png",alt:"新发行版"}})]),e._v(" "),a("li",[e._v("A bug fix comes into master that can be backported to the release branch. The patch is applied, and a new beta is published as "),a("code",[e._v("2.0.0-beta.2")]),e._v(". "),a("img",{attrs:{src:"/images/versioning-sketch-4.png",alt:"修复的 bug 移植至测试版"}})]),e._v(" "),a("li",[e._v("测试版被认为是 _ 一般稳定 _ 的, 它在 "),a("code",[e._v("2.0.0")]),e._v(" 下作为非 beta 版本再次被发布。 "),a("img",{attrs:{src:"/images/versioning-sketch-5.png",alt:"测试版至稳定版"}})]),e._v(" "),a("li",[e._v("之后有个 0day 漏洞被发现，然后对 master 采取了修复措施。 We backport the fix to the "),a("code",[e._v("2-0-x")]),e._v(" line and release "),a("code",[e._v("2.0.1")]),e._v(". "),a("img",{attrs:{src:"/images/versioning-sketch-6.png",alt:"安全移植"}})])]),e._v(" "),a("p",[e._v("几个不同的 SemVer 范围将如何接收新版本的示例:")]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/versioning-sketch-7.png",alt:"Semvers 和发行版"}})]),e._v(" "),a("h1",{attrs:{id:"缺失的特性-alpha版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺失的特性-alpha版本"}},[e._v("#")]),e._v(" 缺失的特性: alpha版本")]),e._v(" "),a("p",[e._v("我们的战略有几次权衡，我们现在认为这是适当的。 最重要的是, 新的主分支特性可能需要一段时间才能作为稳定版发布。 如果你想立即尝试一个新的特性, 你必须自己编译Electron 。")]),e._v(" "),a("p",[e._v("作为未来的考虑, 我们可以介绍以下一种或两种情况:")]),e._v(" "),a("ul",[a("li",[e._v("具有松散稳定性限制的 alpha 释放版; 例如, 当稳定通道在 _ alpha _ 中时, 允许接纳新特性")])]),e._v(" "),a("h1",{attrs:{id:"功能标志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能标志"}},[e._v("#")]),e._v(" 功能标志")]),e._v(" "),a("p",[e._v("功能标志是 Chromium 的一种常见的做法, 在网络开发生态系统中得到了很好的确立。 在 Electron 环境中, 功能标志或 ** 软分支 ** 必须具有以下属性:")]),e._v(" "),a("ul",[a("li",[e._v("是在运行时或生成时启用/禁用的。我们不支持请求作用域功能标志的概念")]),e._v(" "),a("li",[e._v("它完全细分新的和旧的代码路径; 重构旧代码以允许新功能 _ 违反 _ 功能标志内容")]),e._v(" "),a("li",[e._v("在合并功能后, 功能标志最终将被删除")])]),e._v(" "),a("h1",{attrs:{id:"提交语义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交语义"}},[e._v("#")]),e._v(" 提交语义")]),e._v(" "),a("p",[e._v("我们力求在更新和发布过程的各个层面提高清晰度。 从 "),a("code",[e._v("2.0.0")]),e._v(" 开始, 我们将要求遵循 "),a("a",{attrs:{href:"https://conventionalcommits.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v(" 常规提交 "),a("OutboundLink")],1),e._v(" 规范的拉请求, 可以概括如下:")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("会导致 SemVer "),a("strong",[e._v("major")]),e._v(" 版本改变的提交必须以"),a("code",[e._v("BREAKING CHANGE:")]),e._v("开头。")])]),e._v(" "),a("li",[a("p",[e._v("会导致 SemVer "),a("strong",[e._v("minor")]),e._v(" 版本改变的提交必须以 "),a("code",[e._v("feat:")]),e._v(" 开头。")])]),e._v(" "),a("li",[a("p",[e._v("会导致 SemVer ** patch ** 版本改变的提交必须以 "),a("code",[e._v("fix:")]),e._v(" 开头。")])]),e._v(" "),a("li",[a("p",[e._v("我们允许合并提交，只要合并提交的消息符合上述消息格式。")])]),e._v(" "),a("li",[a("p",[e._v("只要pull request里包含有意义的总结性的版本语义消息，即使它其中的某些提交消息不包含版本语义前缀也是可以接受的")])])]),e._v(" "),a("h1",{attrs:{id:"打了版本的-主分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打了版本的-主分支"}},[e._v("#")]),e._v(" 打了版本的 "),a("code",[e._v("主分支")])]),e._v(" "),a("ul",[a("li",[e._v("The "),a("code",[e._v("master")]),e._v(" 分支将始终在其 "),a("code",[e._v("package.json")]),e._v(" 中包含 "),a("code",[e._v("0.0.0-dev")]),e._v(".")]),e._v(" "),a("li",[e._v("Release 分支永远不会合并回 master 分支")]),e._v(" "),a("li",[e._v("发布分支 "),a("em",[e._v("在")]),e._v(" 其"),a("code",[e._v("package.json")]),e._v(" 中包含正确的版本")]),e._v(" "),a("li",[e._v("As soon as a release branch is cut for a major, master must be bumped to the next major.  I.e. "),a("code",[e._v("master")]),e._v(" is always versioned as the next theoretical release branch")])])])}),[],!1,null,null,null);t.default=_.exports}}]);