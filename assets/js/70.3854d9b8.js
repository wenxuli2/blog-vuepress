(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{546:function(r,e,t){"use strict";t.r(e);var a=t(20),o=Object(a.a)({},(function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"crashreporter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crashreporter"}},[r._v("#")]),r._v(" crashReporter")]),r._v(" "),t("blockquote",[t("p",[r._v("将崩溃日志提交给远程服务器")])]),r._v(" "),t("p",[r._v("进程： "),t("RouterLink",{attrs:{to:"/《Electron中文文档》/glossary.html#main-process"}},[r._v("Main")]),r._v(", "),t("RouterLink",{attrs:{to:"/《Electron中文文档》/glossary.html#renderer-process"}},[r._v("Renderer")])],1),r._v(" "),t("p",[r._v("以下是一个设置Electron自动提交崩溃日志到远程服务器的示例：")]),r._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[r._v("const")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v("{")]),r._v(" crashReporter "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v("}")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[r._v("=")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[r._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[r._v("'electron'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(")")]),r._v("\n\ncrashReporter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[r._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v("{")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[r._v("submitURL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[r._v(":")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[r._v("'https://your-domain.com/url-to-submit'")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(")")]),r._v("\n")])]),r._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[r._v("1")]),t("br"),t("span",{staticClass:"line-number"},[r._v("2")]),t("br"),t("span",{staticClass:"line-number"},[r._v("3")]),t("br")])]),t("p",[r._v("构建一个用于接受和处理崩溃日志的服务，你需要以下工程")]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/mozilla/socorro",target:"_blank",rel:"noopener noreferrer"}},[r._v("socorro"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/electron/mini-breakpad-server",target:"_blank",rel:"noopener noreferrer"}},[r._v("mini-breakpad-server"),t("OutboundLink")],1)])]),r._v(" "),t("p",[r._v("或者使用第三方托管的解决办法：")]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://backtrace.io/electron/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Backtrace"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://docs.sentry.io/clients/electron",target:"_blank",rel:"noopener noreferrer"}},[r._v("Sentry"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.bugsplat.com/docs/platforms/electron",target:"_blank",rel:"noopener noreferrer"}},[r._v("BugSplat"),t("OutboundLink")],1)])]),r._v(" "),t("p",[r._v("崩溃报告在上传之前会临时存储在应用程序的用户数据目录下 (在Windows和Mac上称为“Crashpad”，在Linux上称为“Crash reports”)。 在启动崩溃报告器之前，你可以通过调用 "),t("code",[r._v("app.setPath('crashDumps', '/path/to/crashes')")]),r._v(" 来覆盖该目录。")]),r._v(" "),t("p",[r._v("在 Windows 和 macOS 上，Electron 使用 "),t("a",{attrs:{href:"https://chromium.googlesource.com/crashpad/crashpad/+/master/README.md",target:"_blank",rel:"noopener noreferrer"}},[r._v("crashpad"),t("OutboundLink")],1),r._v(" 来监视和报告崩溃情况。 在 Linux上，Electron 使用"),t("a",{attrs:{href:"https://chromium.googlesource.com/breakpad/breakpad/+/master/",target:"_blank",rel:"noopener noreferrer"}},[r._v("breakpad"),t("OutboundLink")],1),r._v("。 这个实现细节是由Chromium驱动的，将来可能会发生变化。 尤其，crashpad是新出的，可能最终会取代所有平台的breakpad。")]),r._v(" "),t("h3",{attrs:{id:"关于linux上的node子进程的说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于linux上的node子进程的说明"}},[r._v("#")]),r._v(" 关于Linux上的Node子进程的说明")]),r._v(" "),t("p",[r._v("如果你在Linux上使用的是Node.js的 "),t("code",[r._v("child_process")]),r._v(" 模块，并且想要在这些进程中报告崩溃信息，那么需要采取额外的步骤来在子进程中正确初始化崩溃报告器。 在 Mac 或 Windows 上就没有这个问题，因为这两个平台使用的Crashpad会自动监视子进程。")]),r._v(" "),t("p",[r._v("由于Node的子进程中无法使用 "),t("code",[r._v("require('electron')")]),r._v(" ，那么在Node的子进程中的 "),t("code",[r._v("process")]),r._v(' 对象中的以下 API 是可用的。 请注意，在Linux上，每个Node子进程的 breakpad 崩溃报告器都有自己独立的实例。 这与渲染器子进程不同，其具有"存根" breakpad 报告器，将信息返回到主进程进行报告。')]),r._v(" "),t("h4",{attrs:{id:"process-crashreporter-start-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-crashreporter-start-options"}},[r._v("#")]),r._v(" "),t("code",[r._v("process.crashReporter.start(options)")])]),r._v(" "),t("p",[r._v("见 "),t("a",{attrs:{href:"#crashreporterstartoptions"}},[t("code",[r._v("crashReporter.start()")])]),r._v("。")]),r._v(" "),t("h4",{attrs:{id:"process-crashreporter-getparameters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-crashreporter-getparameters"}},[r._v("#")]),r._v(" "),t("code",[r._v("process.crashReporter.getParameters()")])]),r._v(" "),t("p",[r._v("见 "),t("a",{attrs:{href:"#crashreportergetparameters"}},[t("code",[r._v("crashReporter.getParameters()")])]),r._v("。")]),r._v(" "),t("h4",{attrs:{id:"process-crashreporter-addextraparameter-key-value"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-crashreporter-addextraparameter-key-value"}},[r._v("#")]),r._v(" "),t("code",[r._v("process.crashReporter.addExtraParameter(key, value)")])]),r._v(" "),t("p",[r._v("见 "),t("a",{attrs:{href:"#crashreporteraddextraparameterkey-value"}},[t("code",[r._v("crashReporter.addExtraParameter(key, value)")])]),r._v("。")]),r._v(" "),t("h4",{attrs:{id:"process-crashreporter-removeextraparameter-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-crashreporter-removeextraparameter-key"}},[r._v("#")]),r._v(" "),t("code",[r._v("process.crashReporter.removeExtraParameter(key)")])]),r._v(" "),t("p",[r._v("见 "),t("a",{attrs:{href:"#crashreporterremoveextraparameterkey"}},[t("code",[r._v("crashReporter.removeExtraParameter(key)")])]),r._v("。")]),r._v(" "),t("h2",{attrs:{id:"方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[r._v("#")]),r._v(" 方法")]),r._v(" "),t("p",[t("code",[r._v("crashReporter")]),r._v(" 模块具有以下方法:")]),r._v(" "),t("h3",{attrs:{id:"crashreporter-start-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crashreporter-start-options"}},[r._v("#")]),r._v(" "),t("code",[r._v("crashReporter.start(options)")])]),r._v(" "),t("ul",[t("li",[t("code",[r._v("选项")]),r._v(" 对象\n"),t("ul",[t("li",[t("code",[r._v("submitURL")]),r._v(" String (可选) - 崩溃报告将以POST的方式发送给这个URL。 必填 除非"),t("code",[r._v("uploadToServer")]),r._v("是"),t("code",[r._v("false")])]),r._v(" "),t("li",[t("code",[r._v("productName")]),r._v(" String (可选) - 默认为 "),t("code",[r._v("app.name")]),r._v(".")]),r._v(" "),t("li",[t("code",[r._v("companyName")]),r._v(" String (可选) "),t("em",[r._v("已废弃")]),r._v(" - 已废弃别名为"),t("code",[r._v("{ globalExtra: { _companyName: ... } }")]),r._v("。")]),r._v(" "),t("li",[t("code",[r._v("uploadToServer")]),r._v(" Boolean (可选) - 是否将崩溃报告发送给服务器。 如果为 false，崩溃报告将被收集并存储在崩溃目录中，但不会上传。 默认值为 "),t("code",[r._v("true")]),r._v("。")]),r._v(" "),t("li",[t("code",[r._v("ignoreSystemCrashHandler")]),r._v(" Boolean (可选) - 如果为true，在主进程中生成的崩溃将不会转发给系统崩溃处理器。 默认值为 "),t("code",[r._v("false")]),r._v(".")]),r._v(" "),t("li",[t("code",[r._v("rateLimit")]),r._v(" Boolean (可选) "),t("em",[r._v("macOS")]),r._v(" "),t("em",[r._v("Windows")]),r._v(" - 如果为true，将上传的崩溃次数限制到 1次/小时。 默认值为 "),t("code",[r._v("false")]),r._v(".")]),r._v(" "),t("li",[t("code",[r._v("compress")]),r._v(" Boolean (可选) - 如果为true，崩溃报告将压缩并上传，使用带有 "),t("code",[r._v("Content-Encoding: gzip")]),r._v(" 的头部。 默认值为 "),t("code",[r._v("true")]),r._v("。")]),r._v(" "),t("li",[t("code",[r._v("extra")]),r._v(" Record<String, String> (可选) - 将随主进程生成的崩溃报告一起发送的额外字符串键/值注解。 只支持string值。 在子进程中产生的崩溃将不会在子进程生成的崩溃报告中包含这些额外的参数。 在子进程中调用 "),t("a",{attrs:{href:"#crashreporteraddextraparameterkey-value"}},[t("code",[r._v("addExtrameter")])]),r._v(" 。")]),r._v(" "),t("li",[t("code",[r._v("globalExtra")]),r._v(" Record<String, String> (可选) - 会与任意进程产生的崩溃报告一起发送的额外字符串键/值注解。 一旦崩溃报告器启动，这些注解就无法更改。 如果一个键在global extra参数和进程特定的额外参数中出现，那么全局的那个将优先使用。 默认情况下，会包括 "),t("code",[r._v("productName")]),r._v(" 和应用程序版本，也就是Electron版本。")])])])]),r._v(" "),t("p",[r._v("该方法必须在使用其他 "),t("code",[r._v("崩溃报告器")]),r._v(" 的API之前调用。 一旦以这种方式初始化，crashpad处理器就会从所有随后创建的进程中收集崩溃信息。 崩溃报告器一旦启动就无法禁用了。")]),r._v(" "),t("p",[r._v("该方法应尽早地在app启动后调用，最好在 "),t("code",[r._v("app.on('ready')")]),r._v(" 之前。 如果崩溃报告器没有在渲染器进程创建前初始化，那么渲染器进程将不会被崩溃报告器监视。")]),r._v(" "),t("p",[t("strong",[r._v("注意：")]),r._v(" 您可以通过使用"),t("code",[r._v("process.crash()")]),r._v("生成一个崩溃来测试崩溃报告器。")]),r._v(" "),t("p",[r._v("** 注意: **，如果您在第一次调用 "),t("code",[r._v("start")]),r._v(" 后需要发送 附加的/更新的 "),t("code",[r._v("extra")]),r._v(" 参数，你可以调用 "),t("code",[r._v("addExtraParameter")]),r._v("。")]),r._v(" "),t("p",[t("strong",[r._v("注意：")]),r._v(" 通过 "),t("code",[r._v("extra")]),r._v(", "),t("code",[r._v("globalExtra")]),r._v("传递，或通过"),t("code",[r._v("addExtrameter")]),r._v("设置的参数对键和值的长度有限制。 键名最长是 39 字节，值不能超过 127 字节。 超过最大长度的键名将被直接忽略。 超过最大长度的键值将被截断。")]),r._v(" "),t("p",[t("strong",[r._v("注意：")]),r._v(" 此方法仅在主进程中可用。")]),r._v(" "),t("h3",{attrs:{id:"crashreporter-getlastcrashreport"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crashreporter-getlastcrashreport"}},[r._v("#")]),r._v(" "),t("code",[r._v("crashReporter.getLastCrashReport()")])]),r._v(" "),t("p",[r._v("返回 "),t("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/crash-report.html"}},[t("code",[r._v("CrashReport")])]),r._v(" - 上次崩溃报告的日期和 ID。 只有已上传的崩溃报告会被返回；在磁盘上存在崩溃报告，除非上传了，否则不会返回。 如果没有上传的报告，则返回"),t("code",[r._v("null")])],1),r._v(" "),t("p",[t("strong",[r._v("注意：")]),r._v(" 此方法仅在主进程中可用。")]),r._v(" "),t("h3",{attrs:{id:"crashreporter-getuploadedreports"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crashreporter-getuploadedreports"}},[r._v("#")]),r._v(" "),t("code",[r._v("crashReporter.getUploadedReports()")])]),r._v(" "),t("p",[r._v("返回 "),t("RouterLink",{attrs:{to:"/《Electron中文文档》/api/structures/crash-report.html"}},[t("code",[r._v("CrashReport[]")])]),r._v(":")],1),r._v(" "),t("p",[r._v("返回所有已上传的崩溃报告。 每个报告包含日期以及上传ID。")]),r._v(" "),t("p",[t("strong",[r._v("注意：")]),r._v(" 此方法仅在主进程中可用。")]),r._v(" "),t("h3",{attrs:{id:"crashreporter-getuploadtoserver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crashreporter-getuploadtoserver"}},[r._v("#")]),r._v(" "),t("code",[r._v("crashReporter.getUploadToServer()")])]),r._v(" "),t("p",[r._v("返回 "),t("code",[r._v("Boolean")]),r._v(" - 是否应向服务器提交报告。 通过"),t("code",[r._v("start")]),r._v(" 方法或 "),t("code",[r._v("setUploadToServer")]),r._v("设置。")]),r._v(" "),t("p",[t("strong",[r._v("注意：")]),r._v(" 此方法仅在主进程中可用。")]),r._v(" "),t("h3",{attrs:{id:"crashreporter-setuploadtoserver-uploadtoserver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crashreporter-setuploadtoserver-uploadtoserver"}},[r._v("#")]),r._v(" "),t("code",[r._v("crashReporter.setUploadToServer(uploadToServer)")])]),r._v(" "),t("ul",[t("li",[t("code",[r._v("uploadToServer")]),r._v(" Boolean - 是否将报告提交到服务器。")])]),r._v(" "),t("p",[r._v("通常由用户首选项控制。 如果在 "),t("code",[r._v("start")]),r._v(" 被调用前调用，该方法将不起作用。")]),r._v(" "),t("p",[t("strong",[r._v("注意：")]),r._v(" 此方法仅在主进程中可用。")]),r._v(" "),t("h3",{attrs:{id:"crashreporter-addextraparameter-key-value"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crashreporter-addextraparameter-key-value"}},[r._v("#")]),r._v(" "),t("code",[r._v("crashReporter.addExtraParameter(key, value)")])]),r._v(" "),t("ul",[t("li",[t("code",[r._v("key")]),r._v(" String - 参数键，长度必须小于39个字节。")]),r._v(" "),t("li",[t("code",[r._v("value")]),r._v(" String - 参数值，长度必须小于127个字节。")])]),r._v(" "),t("p",[r._v("设置一个在发送崩溃报告时将额外包含的参数。 当调用 "),t("code",[r._v("start")]),r._v(" 时, 在这里指定的值会和所有通过 "),t("code",[r._v("extra")]),r._v(" 选项设置的值一起发送。")]),r._v(" "),t("p",[r._v("以这种方式添加的参数 (或通过 "),t("code",[r._v("extra")]),r._v(" 参数到"),t("code",[r._v("crashReporter.start")]),r._v(")是特定于调用进程的。 在主进程中添加extra参数，这些参数将不会与渲染器或其它子进程的崩溃报告一起发送。 同样，在渲染器进程中添加的extra参数不会与其它渲染器进程或主进程中发生的崩溃一起发送。")]),r._v(" "),t("p",[t("strong",[r._v("注意：")]),r._v(" 参数对键和值的长度有限制。 键名最长是 39 字节，值不能超过 20320 字节。 超过最大长度的键名将被直接忽略。 超过最大长度的键值将被截断。")]),r._v(" "),t("p",[t("strong",[r._v("注意：")]),r._v(" 在linux上，超过 127 字节的值将被分割成多个键，每个长度为127个字节。  如下: "),t("code",[r._v("addExtraParameter('foo', 'a'.repeat(130))")]),r._v("将产生两个分块的键， "),t("code",[r._v("foo__1")]),r._v(" 和 "),t("code",[r._v("foo__2")]),r._v("，第一个将包含前127字节，第二个将包含剩余的3字节。  在你的崩溃报告后端，你应该以这种格式将键合在一起。")]),r._v(" "),t("h3",{attrs:{id:"crashreporter-removeextraparameter-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crashreporter-removeextraparameter-key"}},[r._v("#")]),r._v(" "),t("code",[r._v("crashReporter.removeExtraParameter(key)")])]),r._v(" "),t("ul",[t("li",[t("code",[r._v("key")]),r._v(" String - 参数键，长度必须小于39个字节。")])]),r._v(" "),t("p",[r._v("从当前的参数集中删除一个额外的参数。 未来的崩溃中将不包含此参数。")]),r._v(" "),t("h3",{attrs:{id:"crashreporter-getparameters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crashreporter-getparameters"}},[r._v("#")]),r._v(" "),t("code",[r._v("crashReporter.getParameters()")])]),r._v(" "),t("p",[r._v("返回 "),t("code",[r._v("Record<String, String>")]),r._v(" - 崩溃报告器当前的“extra”参数。")]),r._v(" "),t("h2",{attrs:{id:"崩溃报告内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#崩溃报告内容"}},[r._v("#")]),r._v(" 崩溃报告内容")]),r._v(" "),t("p",[r._v("崩溃报告将发送下面 "),t("code",[r._v("multipart/form-data")]),r._v(" "),t("code",[r._v("POST")]),r._v(" 型的数据给 "),t("code",[r._v("submitURL")]),r._v(":")]),r._v(" "),t("ul",[t("li",[t("code",[r._v("ver")]),r._v(" String - Electron 的版本.")]),r._v(" "),t("li",[t("code",[r._v("platform")]),r._v(" String - 例如 'win32'.")]),r._v(" "),t("li",[t("code",[r._v("process_type")]),r._v(" String - 例如 'renderer'.")]),r._v(" "),t("li",[t("code",[r._v("guid")]),r._v(" String - 例如 '5e1286fc-da97-479e-918b-6bfb0c3d1c72'.")]),r._v(" "),t("li",[t("code",[r._v("_version")]),r._v(" String - "),t("code",[r._v("package.json")]),r._v(" 里的版本号.")]),r._v(" "),t("li",[t("code",[r._v("_productName")]),r._v(" String - "),t("code",[r._v("crashReporter")]),r._v(" "),t("code",[r._v("options")]),r._v(" 对象中的产品名字")]),r._v(" "),t("li",[t("code",[r._v("prod")]),r._v(" String - 基础产品的名称。 在这种情况下是Electron。")]),r._v(" "),t("li",[t("code",[r._v("_companyName")]),r._v(" String - "),t("code",[r._v("crashReporter")]),r._v(" "),t("code",[r._v("options")]),r._v(" 对象中的公司名称")]),r._v(" "),t("li",[t("code",[r._v("upload_file_minidump")]),r._v(" File - "),t("code",[r._v("minidump")]),r._v(" 格式的崩溃报告")]),r._v(" "),t("li",[r._v("All level one properties of the "),t("code",[r._v("extra")]),r._v(" object in the "),t("code",[r._v("crashReporter")]),r._v(" "),t("code",[r._v("options")]),r._v(" object.")])])])}),[],!1,null,null,null);e.default=o.exports}}]);