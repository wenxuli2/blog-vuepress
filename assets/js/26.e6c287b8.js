(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{500:function(t,s,n){"use strict";n.r(s);var a=n(20),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("学git看这两个网站足够了，一下绝大部分内容都是从这里抄的，记录一下，防止自己忘记\n")])])]),n("p",[n("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰的网络日志"),n("OutboundLink")],1),t._v(" "),n("br"),t._v(" "),n("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/896043488029600",target:"_blank",rel:"noopener noreferrer"}},[t._v("廖雪峰的官方网站\n"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"生成密钥"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生成密钥"}},[t._v("#")]),t._v(" 生成密钥")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v('git config --global user.name "wenxuli2"\ngit config --global user.email "1031553051@qq.com"\n\n\nssh-keygen -t rsa -C "1031553051@qq.com"\n# notepad C:\\Users\\Administrator\\.ssh\\id_rsa.pub\n#start https://github.com/settings/ssh/new\n')])])]),n("h2",{attrs:{id:"云服务器切换git用户并且设置密钥"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#云服务器切换git用户并且设置密钥"}},[t._v("#")]),t._v(" 云服务器切换git用户并且设置密钥")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("# mkdir ~/.ssh\n# chmod 755  ~/.ssh\n# vim ~/.ssh/authorized_keys\n记得将john改成你的本地计算机用户名\n生成密钥,在这个位置C:\\Users\\john\\.ssh\\id_rsa.pub\n如果有就不用再生成了\nPS: ssh-keygen -t rsa\n直接用记事本打开复制粘贴到云服务器~/.ssh/id_rsa.pub处\nPS: notepad C:\\Users\\Administrator\\.ssh\\id_rsa.pub\n保存好后\n# chmod 644 ~/.ssh/authorized_keys\n")])])]),n("h2",{attrs:{id:"常用git命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用git命令"}},[t._v("#")]),t._v(" 常用git命令")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v('git init\ngit remote add origin git@github.com:wenxuli2/docs.git\ngit add .\ngit commit -m "frist"\ngit push -u origin master\n\n//慎用\ngit push --force origin master\n    --force选项，结果导致远程主机上更新的版本被覆盖。除非你很确定要这样做，否则应该尽量避免使用--force选项。\ngit push origin --delete home-page.git (fetch)\ngit push origin --delete master 删除远程分支\ngit remote -v 查看项目远程地址\n查看远程主机的网址\ngit branch -r -D origin/master\ngit branch -a 查看远程项目所有分支\n\n切换到基础分支\ngit checkout master\n创建并切换到新分支\ngit checkout -b source\n更新分支代码并提交\ngit add *\ngit commit -m "init source"\ngit push origin source\n\n新建分支\ngit checkout -b "fix-In-2"\n它是下面两条命令的简写：\n$ git branch iss53\n$ git checkout iss53\n\ngit log 查看历史提交信息\ngit status 检查下修改了什么内容\n\ngit remote show origin 查看当前仓库基本信息\n\n删除分支\ngit branch -d hotfix\n\ngit status\n\ngit merge\n\n删除远程分支并不会删除本地分支\ngit push origin --delete [branchname]\n清理本地无效分支(远程已删除本地没删除的分支):\ngit fetch -p\n')])])]),n("p",[t._v("​"),n("br"),t._v("\n​    git branch -m main master\n​    git fetch origin\n​    git branch -u origin/master master\n​    git remote set-head origin -a")]),t._v(" "),n("p",[t._v("​"),n("br"),t._v("\n​    # 提交到 Github\n​    $\n​    $ git push -u origin master")]),t._v(" "),n("p",[t._v("​"),n("br"),t._v("\n​    git 如何取消add操作，这里仅取消提交到库存区这个动作，只撤消动作，修改的文件不变\n​    可以直接使用命令"),n("br"),t._v("\n​    git reset HEAD\n​"),n("br"),t._v("\n​    这个是整体回到上次一次操作\n​"),n("br"),t._v("\n​    绿字变红字(撤销add)\n​    如果是某个文件回滚到上一次操作： 同上只撤消动作工作区修改的文件不变\n​    git reset HEAD  文件名\n​"),n("br"),t._v("\n​    红字变无 (撤销没add修改)\n​    git checkout -- 文件\n​    二、撤消工作区编辑\n​    撤消之前未add的所有修改\n​    git reset --hard HEAD")]),t._v(" "),n("h2",{attrs:{id:"修改远程仓库地址"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改远程仓库地址"}},[t._v("#")]),t._v(" 修改远程仓库地址")]),t._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. 直接修改")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url origin "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2、先删除再修改地址")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" origin\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3、直接修改配置文件")]),t._v("\n进入项目\n.git/config\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("h3",{attrs:{id:"github拉取文件夹下的某个具体文件-文件夹"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#github拉取文件夹下的某个具体文件-文件夹"}},[t._v("#")]),t._v(" GitHub拉取文件夹下的某个具体文件/文件夹")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('# 1.初始化\nmkdir localdir # 创建用于作为本地仓库的文件夹\ncd localdir # 进入文件夹\ngit init # 在本地指定文件夹内执行此命令设置为git仓库\n# 2. 拉取remote all objects信息\ngit remote add -f origin http://github/projectName.git # 添加远程仓库地址，实现拉取remote的all objects信息\n# 3. 开启sparse clone\ngit config core.sparsecheckout true # 用于控制是否允许设置pull指定文件/夹，适用于Git1.7.0以后版本，本质是开启sparse clone\necho "fileName" >> .git/info/sparse-checkout # 本地目录的.git文件夹下，如果没有sparse-checkout文件则创建，在其中添加指定的文件/夹fileName，就是需要拉取的那个特定文件/夹。*表示所有，！表示匹配相反\ncat .git/info/sparse-chechout # 查看\n# 4. 拉取指定目录\ngit pull origin master # 拉取命令是一样的，只是已经通过配置文件sparse-chechout指定了目标文件/夹\n\n\ngit remote add -f origin https://github.com/electron/i18n.git\ngit remote add -f origin git@github.com:electron/i18n.git\ngit config core.sparsecheckout true \n# git config core.sparsecheckout false\necho "content" >> .git/info/sparse-checkout \n# cat .git/info/sparse-chechout # 查看\ngit pull origin master # 拉取命令是一样的，只是已经通过配置文件sparse-chechout指定了目标文件/夹\n\n\ngit clone https://github.com/electron/i18n.git/content\n\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br")])]),n("p",[t._v("svn")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("svn co --depth empty https://github.com/user/repo # make an empty checkout fo the repository\nsvn up trunk # get the trunck branch,The Subversion bridge maps trunk to the Git HEAD branch(which is usually master)\nsvn co https://github.com/user/repo/trunk/fileName # 拉取指定目录\n\nsvn co --depth empty https://github.com/user/repo # make an empty checkout fo the repository\nsvn up trunk # get the trunck branch,The Subversion bridge maps trunk to the Git HEAD branch(which is usually master)\nsvn co https://github.com/user/repo/trunk/fileName # 拉取指定目录\n\nsvn co https://github.com/electron/i18n.git\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("h3",{attrs:{id:"github代理设置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#github代理设置"}},[t._v("#")]),t._v(" GitHub代理设置")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 只对GitHub进行代理\ngit config --global http.https://github.com.proxy https://127.0.0.1:7890\ngit config --global https.https://github.com.proxy https://127.0.0.1:7890\n// 全局代理设置\ngit config --global http.proxy http://127.0.0.1:7890\ngit config --global https.proxy https://127.0.0.1:7890\n\n**注意：以上两点都是对https协议进行代理设置，也就是仅对`git clone https://www.github.com/xxxx/xxxx.git`这种命令有效。对于SSH协议，也就是`git clone git@github.com:xxxxxx/xxxxxx.git`这种，依旧是无效的。**\n\n// sock5代理设置\ngit config --global http.https://github.com.proxy socks5://127.0.0.1:7890\ngit config --global https.https://github.com.proxy socks5://127.0.0.1:7890\n\n// 取消github代理\ngit config --global --unset http.https://github.com.proxy\ngit config --global --unset https.https://github.com.proxy\n// 取消git代理\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\n\n// 查看已有配置\ngit config --global -l\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br")])]),n("h3",{attrs:{id:"github-action-精华指南"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#github-action-精华指南"}},[t._v("#")]),t._v(" "),n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/164744104",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github Action 精华指南"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/marketplace?type=actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-action官方市场"),n("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);