(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{630:function(t,e,o){"use strict";o.r(e);var i=o(20),n=Object(i.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"shortcutdetails-object"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#shortcutdetails-object"}},[t._v("#")]),t._v(" ShortcutDetails Object")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("target")]),t._v(" String - The target to launch from this shortcut.")]),t._v(" "),o("li",[o("code",[t._v("cwd")]),t._v(" String (optional) - The working directory. Default is empty.")]),t._v(" "),o("li",[o("code",[t._v("args")]),t._v(" String (optional) - The arguments to be applied to "),o("code",[t._v("target")]),t._v(" when launching from this shortcut. Default is empty.")]),t._v(" "),o("li",[o("code",[t._v("description")]),t._v(" String (optional) - The description of the shortcut. Default is empty.")]),t._v(" "),o("li",[o("code",[t._v("icon")]),t._v(" String (optional) - The path to the icon, can be a DLL or EXE. "),o("code",[t._v("icon")]),t._v(" and "),o("code",[t._v("iconIndex")]),t._v(" have to be set together. Default is empty, which uses the target's icon.")]),t._v(" "),o("li",[o("code",[t._v("iconIndex")]),t._v(" Number (optional) - The resource ID of icon when "),o("code",[t._v("icon")]),t._v(" is a DLL or EXE. Default is 0.")]),t._v(" "),o("li",[o("code",[t._v("appUserModelId")]),t._v(" String (optional) - The Application User Model ID. Default is empty.")]),t._v(" "),o("li",[o("code",[t._v("toastActivatorClsid")]),t._v(" String (optional) - The Application Toast Activator CLSID. Needed for participating in Action Center.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);